/**
 * –°–î–≠–ö –î–æ—Å—Ç–∞–≤–∫–∞ - –í–µ—Ä—Å–∏—è –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —á–µ–∫–∞—É—Ç–∞ WooCommerce
 * –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ —Ñ–æ—Ä–º—ã –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–æ–≤
 */

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–∞—Ä—Ç
window.cdekMapCreationLock = false;

// ========== –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò ==========

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∫–æ–¥–∞
const Utils = {
    log: (message, data) => {
        if (data) console.log(message, data);
        else console.log(message);
    },
    
    delay: (fn, ms = 100) => setTimeout(fn, ms),
    
    select: (selector, all = false) => {
        return all ? document.querySelectorAll(selector) : document.querySelector(selector);
    },
    
    hide: (elements) => {
        const els = Array.isArray(elements) ? elements : [elements];
        els.forEach(el => el?.style?.setProperty('display', 'none', 'important'));
    },
    
    show: (elements) => {
        const els = Array.isArray(elements) ? elements : [elements];
        els.forEach(el => {
            if (el?.style) {
                el.style.removeProperty('display');
                el.style.removeProperty('visibility'); 
                el.style.removeProperty('opacity');
                el.style.setProperty('display', 'block', 'important');
                el.style.setProperty('visibility', 'visible', 'important');
                el.style.setProperty('opacity', '1', 'important');
            }
        });
    },
    
    mapResize: () => {
        if (window.cdekMap?.container) {
            try {
                window.cdekMap.container.fitToViewport();
                Utils.log('‚úÖ –†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω');
            } catch (e) {
                Utils.log('üö® –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã:', e);
            }
        }
    }
};

// –£–º–Ω—ã–π –¥–µ–±–∞—É–Ω—Å–µ—Ä —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
class SmartDebouncer {
    constructor() {
        this.timers = new Map();
        this.priorities = new Map();
    }
    
    debounce(key, fn, delay, priority = 0) {
        if (priority > 5) {
            this.cancel(key);
            return fn();
        }
        
        this.cancel(key);
        
        const timer = setTimeout(() => {
            fn();
            this.timers.delete(key);
            this.priorities.delete(key);
        }, delay);
        
        this.timers.set(key, timer);
        this.priorities.set(key, priority);
    }
    
    cancel(key) {
        if (this.timers.has(key)) {
            clearTimeout(this.timers.get(key));
            this.timers.delete(key);
            this.priorities.delete(key);
        }
    }
}

// –ë–∞—Ç—á–∏–Ω–≥ DOM –æ–ø–µ—Ä–∞—Ü–∏–π
class DOMBatcher {
    constructor() {
        this.operations = [];
        this.scheduled = false;
    }
    
    add(operation) {
        this.operations.push(operation);
        if (!this.scheduled) {
            this.scheduled = true;
            requestAnimationFrame(() => this.flush());
        }
    }
    
    flush() {
        this.operations.forEach(op => {
            try {
                op();
            } catch (error) {
                console.error('DOM operation error:', error);
            }
        });
        this.operations = [];
        this.scheduled = false;
    }
}

// ========== –£–ú–ù–´–ô –ü–û–ò–°–ö –ê–î–†–ï–°–û–í ==========

class SmartAddressSearch {
    constructor() {
        this.debouncer = new SmartDebouncer();
        this.userLocation = null;
        
        // –°–ø–∏—Å–æ–∫ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –≥–æ—Ä–æ–¥–æ–≤
        this.popularCities = [
            '–ú–æ—Å–∫–≤–∞', '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', '–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–ö–∞–∑–∞–Ω—å', '–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥',
            '–ß–µ–ª—è–±–∏–Ω—Å–∫', '–°–∞–º–∞—Ä–∞', '–£—Ñ–∞', '–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É', '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', '–ü–µ—Ä–º—å', '–í–æ—Ä–æ–Ω–µ–∂',
            '–í–æ–ª–≥–æ–≥—Ä–∞–¥', '–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', '–°–∞—Ä–∞—Ç–æ–≤', '–¢—é–º–µ–Ω—å', '–¢–æ–ª—å—è—Ç—Ç–∏', '–ò–∂–µ–≤—Å–∫', '–ë–∞—Ä–Ω–∞—É–ª',
            '–£–ª—å—è–Ω–æ–≤—Å–∫', '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', '–Ø—Ä–æ—Å–ª–∞–≤–ª—å', '–ò—Ä–∫—É—Ç—Å–∫', '–•–∞–±–∞—Ä–æ–≤—Å–∫', '–ú–∞—Ö–∞—á–∫–∞–ª–∞', '–¢–æ–º—Å–∫',
            '–û—Ä–µ–Ω–±—É—Ä–≥', '–ö–µ–º–µ—Ä–æ–≤–æ', '–ù–æ–≤–æ–∫—É–∑–Ω–µ—Ü–∫', '–†—è–∑–∞–Ω—å', '–ê—Å—Ç—Ä–∞—Ö–∞–Ω—å', '–ü–µ–Ω–∑–∞', '–õ–∏–ø–µ—Ü–∫',
            '–¢—É–ª–∞', '–ö–∏—Ä–æ–≤', '–ß–µ–±–æ–∫—Å–∞—Ä—ã', '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥', '–ë—Ä—è–Ω—Å–∫', '–ö—É—Ä—Å–∫', '–ò–≤–∞–Ω–æ–≤–æ', '–ú–∞–≥–Ω–∏—Ç–æ–≥–æ—Ä—Å–∫'
        ];
        
        this.initUserLocation();
    }
    
    async initUserLocation() {
        try {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        this.userLocation = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };
                    },
                    () => this.setDefaultLocation(),
                    { timeout: 5000, maximumAge: 30000 }
                );
            } else {
                this.setDefaultLocation();
            }
        } catch (error) {
            this.setDefaultLocation();
        }
    }
    
    setDefaultLocation() {
        this.userLocation = {
            lat: 55.7558,
            lng: 37.6176,
            city: '–ú–æ—Å–∫–≤–∞'
        };
    }
    
    search(query, callback) {
        this.debouncer.debounce('address-search', () => {
            this.performSearch(query, callback);
        }, 100);
    }
    
    performSearch(query, callback) {
        if (!query || query.length < 2) {
            callback([]);
            return;
        }
        
        const results = this.searchInCities(query);
        callback(results);
    }
    
    searchInCities(query) {
        const queryLower = query.toLowerCase().trim();
        const results = [];
        const maxResults = 10;
        
        this.popularCities.forEach(city => {
            if (results.length >= maxResults) return;
            
            const cityLower = city.toLowerCase();
            let score = 0;
            
            if (cityLower === queryLower) {
                score = 1000;
            } else if (cityLower.startsWith(queryLower)) {
                score = 500;
            } else if (cityLower.includes(queryLower)) {
                score = 200;
            }
            
            if (score > 0) {
                const popularityIndex = this.popularCities.indexOf(city);
                const popularityBonus = (this.popularCities.length - popularityIndex) * 2;
                score += popularityBonus;
                
                if (this.userLocation && this.userLocation.city === city) {
                    score += 200;
                }
                
                results.push({
                    city: city,
                    display: city,
                    score: score,
                    type: 'city'
                });
            }
        });
        
        results.sort((a, b) => b.score - a.score);
        return results.slice(0, maxResults);
    }
}

// ========== –û–°–ù–û–í–ù–û–ô –ö–û–î –°–î–≠–ö –î–õ–Ø –ö–õ–ê–°–°–ò–ß–ï–°–ö–û–ì–û –ß–ï–ö–ê–£–¢–ê ==========

jQuery(document).ready(function($) {
    var cdekMap = null;
    var cdekPoints = [];
    var selectedPoint = null;
    var isInitialized = false;
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    const debouncer = new SmartDebouncer();
    const domBatcher = new DOMBatcher();
    const addressSearch = new SmartAddressSearch();
    
    // ========== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–°–ß–ï–¢–ê –ì–ê–ë–ê–†–ò–¢–û–í –ò –°–¢–û–ò–ú–û–°–¢–ò ==========
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ü–µ–Ω
    function parsePrice(priceText) {
        if (!priceText) return 0;
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ —Ç–æ—á–µ–∫/–∑–∞–ø—è—Ç—ã—Ö
        var cleanText = priceText.toString().replace(/[^\d.,]/g, '');
        
        // –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—ã–µ –Ω–∞ —Ç–æ—á–∫–∏ –¥–ª—è decimal
        cleanText = cleanText.replace(',', '.');
        
        // –ü–∞—Ä—Å–∏–º –∫–∞–∫ float –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª—ã—Ö
        var result = Math.round(parseFloat(cleanText)) || 0;
        
        console.log('üí∞ –ü–∞—Ä—Å–∏–Ω–≥ —Ü–µ–Ω—ã:', priceText, '‚Üí', cleanText, '‚Üí', result);
        return result;
    }
    
    function getCartDataForCalculation() {
        var cartWeight = 0;
        var cartValue = 0;
        var totalVolume = 0;
        var maxLength = 0, maxWidth = 0, maxHeight = 0;
        var hasValidDimensions = false;
        var totalItems = 0;
        var packagesCount = 1;
        
        console.log('–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —á–µ–∫–∞—É—Ç–∞...');
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∫—Ä—ã—Ç—ã—Ö –ø–æ–ª–µ–π —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–∞—Ö
        var cartItems = $('#wc-cart-data .cart-item-data');
        
        if (cartItems.length === 0) {
            console.error('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–∞—Ö –≤ –∫–æ—Ä–∑–∏–Ω–µ! –†–∞—Å—á–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.');
            return null;
        }
        
        cartItems.each(function() {
            var $item = $(this);
            var quantity = parseInt($item.data('quantity')) || 0;
            var length = parseFloat($item.data('length')) || 0;
            var width = parseFloat($item.data('width')) || 0;
            var height = parseFloat($item.data('height')) || 0;
            var weight = parseFloat($item.data('weight')) || 0;
            var price = parseFloat($item.data('price')) || 0;
            
            console.log('üì¶ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–æ–≤–∞—Ä–∞:', {
                length: length,
                width: width, 
                height: height,
                weight: weight,
                quantity: quantity,
                price: price
            });
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Ç–æ–≤–∞—Ä–∞ –µ—Å—Ç—å –í–°–ï –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –≥–∞–±–∞—Ä–∏—Ç—ã
            if (length > 0 && width > 0 && height > 0 && weight > 0) {
                hasValidDimensions = true;
                
                // –°–æ–±–∏—Ä–∞–µ–º –æ–±—â–∏–π –≤–µ—Å –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å
                cartWeight += (weight * quantity);
                cartValue += (price * quantity);
                totalItems += quantity;
                
                // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—ä–µ–º —Ç–æ–≤–∞—Ä–æ–≤
                var itemVolume = (length * width * height) * quantity;
                totalVolume += itemVolume;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã (–¥–ª—è —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ç–æ–≤–∞—Ä–∞)
                maxLength = Math.max(maxLength, length);
                maxWidth = Math.max(maxWidth, width); 
                maxHeight = Math.max(maxHeight, height);
                
                console.log('‚úÖ –¢–æ–≤–∞—Ä —Å –ø–æ–ª–Ω—ã–º–∏ –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏ –¥–æ–±–∞–≤–ª–µ–Ω');
            } else {
                console.error('‚ùå –£ —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≥–∞–±–∞—Ä–∏—Ç—ã –∏–ª–∏ –≤–µ—Å! –¢–æ–≤–∞—Ä –ø—Ä–æ–ø—É—â–µ–Ω.');
                console.error('üìã –¢—Ä–µ–±—É—é—Ç—Å—è: –¥–ª–∏–Ω–∞, —à–∏—Ä–∏–Ω–∞, –≤—ã—Å–æ—Ç–∞ –ò –≤–µ—Å');
            }
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ç–æ–≤–∞—Ä—ã —Å –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏
        if (!hasValidDimensions || totalItems === 0) {
            console.error('‚ùå –í –∫–æ—Ä–∑–∏–Ω–µ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–ª–Ω—ã–º–∏ –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏! –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.');
            console.error('üìã –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –≥–∞–±–∞—Ä–∏—Ç—ã (–î√ó–®√ó–í) –∏ –≤–µ—Å –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ WooCommerce.');
            return null;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–∫–∞–∑–∞ –∏–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        var orderTotalElement = $('.cart-subtotal .amount');
        if (orderTotalElement.length > 0) {
            var totalText = orderTotalElement.first().text();
            var parsedValue = parsePrice(totalText);
            if (parsedValue > 0) {
                cartValue = parsedValue;
            }
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–æ—Ä–æ–±–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        var dimensions = calculateOptimalBoxSize(totalVolume, maxLength, maxWidth, maxHeight, totalItems);
        
        console.log('üìä –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã:', {
            weight: cartWeight,
            value: cartValue,
            dimensions: dimensions,
            hasRealDimensions: hasValidDimensions,
            packagesCount: packagesCount,
            totalVolume: totalVolume,
            totalItems: totalItems
        });
        
        return {
            weight: cartWeight,
            value: cartValue,
            dimensions: dimensions,
            hasRealDimensions: hasValidDimensions,
            packagesCount: dimensions.packagesCount || 1
        };
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ –∫–æ—Ä–æ–±–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¢–û–õ–¨–ö–û —Ä–µ–∞–ª—å–Ω—ã—Ö –≥–∞–±–∞—Ä–∏—Ç–æ–≤
    function calculateOptimalBoxSize(totalVolume, maxLength, maxWidth, maxHeight, totalItems) {
        console.log('üì¶ –†–∞—Å—á–µ—Ç –∫–æ—Ä–æ–±–æ–∫ –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∑–∞–∫–∞–∑–∞');
        console.log('üìè –û–±—â–∏–π –æ–±—ä–µ–º —Ç–æ–≤–∞—Ä–æ–≤:', totalVolume, '—Å–º¬≥');
        console.log('üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã:', {length: maxLength, width: maxWidth, height: maxHeight});
        console.log('üì¶ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤:', totalItems);
        
        // –î–æ–±–∞–≤–ª—è–µ–º 20% –∑–∞–ø–∞—Å –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ (—É–º–µ–Ω—å—à–∞–µ–º —Å 30% –¥–ª—è –±–æ–ª—å—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤)
        var packingVolume = totalVolume * 1.2;
        
        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏ –°–î–≠–ö (–¥–ª–∏–Ω–∞ x —à–∏—Ä–∏–Ω–∞ x –≤—ã—Å–æ—Ç–∞ –≤ —Å–º)
        var standardBoxes = [
            { name: 'S', length: 19, width: 17, height: 10, volume: 3230, maxWeight: 5000 },
            { name: 'M', length: 24, width: 17, height: 10, volume: 4080, maxWeight: 5000 },
            { name: 'L', length: 34, width: 24, height: 17, volume: 13872, maxWeight: 10000 },
            { name: 'XL', length: 39, width: 27, height: 21, volume: 22113, maxWeight: 15000 },
            { name: 'XXL', length: 60, width: 40, height: 35, volume: 84000, maxWeight: 30000 }
        ];
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –¥–ª—è –±–æ–ª—å—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤
        var packagesCount = 1;
        var selectedBox = null;
        
        // –î–ª—è –±–æ–ª—å—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤ (–±–æ–ª–µ–µ 200 —Ç–æ–≤–∞—Ä–æ–≤) –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ—Ä–æ–±–∫–∏
        if (totalItems > 200) {
            console.log('üöö –ë–æ–ª—å—à–æ–π –∑–∞–∫–∞–∑ (' + totalItems + ' —Ç–æ–≤–∞—Ä–æ–≤), —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ—Ä–æ–±–æ–∫');
            
            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –∏—Å—Ö–æ–¥—è –∏–∑ –æ–±—ä–µ–º–∞
            var maxBoxVolume = standardBoxes[standardBoxes.length - 1].volume; // –°–∞–º–∞—è –±–æ–ª—å—à–∞—è –∫–æ—Ä–æ–±–∫–∞
            packagesCount = Math.ceil(packingVolume / maxBoxVolume);
            
                    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –¥–ª—è API –°–î–≠–ö
        if (packagesCount > 5) {
            packagesCount = 5;
            console.log('‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ—Ä–æ–±–æ–∫ –¥–æ 5 (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ API –°–î–≠–ö)');
        }
            
            // –û–±—ä–µ–º –Ω–∞ –æ–¥–Ω—É –∫–æ—Ä–æ–±–∫—É
            var volumePerBox = packingVolume / packagesCount;
            
            console.log('üì¶ –ü–ª–∞–Ω–∏—Ä—É–µ–º ' + packagesCount + ' –∫–æ—Ä–æ–±–æ–∫, –æ–±—ä–µ–º –Ω–∞ –∫–æ—Ä–æ–±–∫—É: ' + Math.round(volumePerBox) + ' —Å–º¬≥');
            
            // –ù–∞—Ö–æ–¥–∏–º –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–æ—Ä–æ–±–∫—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–º–∞
            for (var i = 0; i < standardBoxes.length; i++) {
                var box = standardBoxes[i];
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–≤–∞—Ä—ã –ø–æ–º–µ—â–∞—é—Ç—Å—è –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º –ò –ø–æ –æ–±—ä–µ–º—É
                var fitsSize = (maxLength <= box.length && maxWidth <= box.width && maxHeight <= box.height);
                var fitsVolume = (volumePerBox <= box.volume);
                
                console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–æ–±–∫—É ' + box.name + ' –¥–ª—è ' + packagesCount + ' –∫–æ—Ä–æ–±–æ–∫:', {
                    fitsSize: fitsSize,
                    fitsVolume: fitsVolume,
                    requiredVolumePerBox: Math.round(volumePerBox),
                    boxVolume: box.volume
                });
                
                if (fitsSize && fitsVolume) {
                    selectedBox = box;
                    break;
                }
            }
        } else {
            // –î–ª—è –æ–±—ã—á–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –ª–æ–≥–∏–∫—É
            for (var i = 0; i < standardBoxes.length; i++) {
                var box = standardBoxes[i];
                
                var fitsSize = (maxLength <= box.length && maxWidth <= box.width && maxHeight <= box.height);
                var fitsVolume = (packingVolume <= box.volume);
                
                console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–æ–±–∫—É ' + box.name + ':', {
                    fitsSize: fitsSize,
                    fitsVolume: fitsVolume,
                    requiredVolume: Math.round(packingVolume),
                    boxVolume: box.volume
                });
                
                if (fitsSize && fitsVolume) {
                    selectedBox = box;
                    break;
                }
            }
        }
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–æ—Ä–æ–±–∫—É, –±–µ—Ä–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é
        if (!selectedBox) {
            selectedBox = standardBoxes[standardBoxes.length - 1];
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –∫–æ—Ä–æ–±–∫—É:', selectedBox.name);
        }
        
        var result = {
            length: selectedBox.length,
            width: selectedBox.width,
            height: selectedBox.height,
            packagesCount: packagesCount,
            boxName: selectedBox.name
        };
        
        console.log('üì¶ –ò—Ç–æ–≥–æ–≤—ã–π –ø–ª–∞–Ω —É–ø–∞–∫–æ–≤–∫–∏:', {
            –∫–æ—Ä–æ–±–∫–∞: selectedBox.name,
            —Ä–∞–∑–º–µ—Ä—ã: result.length + '√ó' + result.width + '√ó' + result.height + ' —Å–º',
            –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: packagesCount + ' —à—Ç.',
            –æ–±—â–∏–π_–æ–±—ä–µ–º: Math.round(totalVolume) + ' —Å–º¬≥',
            –æ–±—ä–µ–º_—Å_—É–ø–∞–∫–æ–≤–∫–æ–π: Math.round(packingVolume) + ' —Å–º¬≥'
        });
        
        return result;
    }
    
    function calculateDeliveryCost(point, callback) {
        var cartData = getCartDataForCalculation();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—É—á–µ–Ω—ã
        if (!cartData) {
            console.error('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã —Å –≥–∞–±–∞—Ä–∏—Ç–∞–º–∏! –†–∞—Å—á–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω.');
            callback(0);
            return;
        }
        
        if (typeof cdek_ajax === 'undefined' || !cdek_ajax.ajax_url) {
            console.error('CDEK AJAX –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            callback(0);
            return;
        }
        
        if (!point || !point.code) {
            console.error('–ù–µ —É–∫–∞–∑–∞–Ω –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –∏–ª–∏ –µ–≥–æ –∫–æ–¥');
            callback(0);
            return;
        }
        
        console.log('–ó–∞–ø—Ä–æ—Å —Ä–∞—Å—á–µ—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–∞:', point.code);
        console.log('–î–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã:', cartData);
        
        $.ajax({
            url: cdek_ajax.ajax_url,
            type: 'POST',
            dataType: 'json',
            timeout: 30000,
            data: {
                action: 'calculate_cdek_delivery_cost',
                point_code: point.code,
                point_data: JSON.stringify(point),
                cart_weight: cartData.weight,
                cart_dimensions: JSON.stringify(cartData.dimensions),
                cart_value: cartData.value,
                has_real_dimensions: cartData.hasRealDimensions ? 1 : 0,
                packages_count: cartData.packagesCount || 1,
                nonce: cdek_ajax.nonce || ''
            },
            success: function(response) {
                if (response && response.success && response.data && response.data.delivery_sum) {
                    var deliveryCost = parseInt(response.data.delivery_sum);
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –ª–∏ fallback —Ä–∞—Å—á–µ—Ç
                    if (response.data.fallback_used) {
                        console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∑–∞–∫–∞–∑–∞: ' + deliveryCost + ' —Ä—É–±.');
                        
                        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
                        if (cartData.packagesCount >= 5) {
                            setTimeout(function() {
                                var warningHtml = '<div class="cdek-fallback-warning" style="background: #fff3cd; border: 1px solid #ffeaa7; color: #856404; padding: 10px; margin: 10px 0; border-radius: 4px; font-size: 14px;">' +
                                    '<strong>‚ÑπÔ∏è –ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</strong><br>' +
                                    '–î–ª—è –±–æ–ª—å—à–æ–≥–æ –∑–∞–∫–∞–∑–∞ (' + cartData.packagesCount + ' –∫–æ—Ä–æ–±–æ–∫) –ø–æ–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏. ' +
                                    '–¢–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –±—É–¥–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–∫–∞–∑–∞.' +
                                    '</div>';
                                
                                $('.cdek-fallback-warning').remove(); // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
                                $('#cdek-delivery-content').prepend(warningHtml);
                            }, 500);
                        }
                    } else {
                        // –£–±–∏—Ä–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ —Ä–∞—Å—á–µ—Ç —Ç–æ—á–Ω—ã–π
                        $('.cdek-fallback-warning').remove();
                    }
                    
                    if (cartData.packagesCount > 1 && !response.data.fallback_used) {
                        deliveryCost = deliveryCost * cartData.packagesCount;
                    }
                    
                    callback(deliveryCost);
                } else {
                    console.log('‚ùå API –°–î–≠–ö –Ω–µ –≤–µ—Ä–Ω—É–ª —Å—Ç–æ–∏–º–æ—Å—Ç—å');
                    callback(0);
                }
            },
            error: function(xhr, status, error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API –°–î–≠–ö:', {
                    status: status,
                    error: error
                });
                
                console.log('‚ùå –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω');
                callback(0);
            }
        });
    }
    
    // ========== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ê–î–†–ï–°–ê–ú–ò ==========
    
    function parseAddress(address) {
        var result = { city: '', street: '' };
        
        if (!address || address.trim() === '') {
            return result;
        }
        
        var parts = address.split(/[,\s]+/);
        
        for (var i = 0; i < parts.length; i++) {
            var part = parts[i].trim();
            if (!part) continue;
            
            if (!result.city && !result.street) {
                result.city = part;
            } else if (result.city && !result.street) {
                result.street = parts.slice(i).join(' ');
                break;
            }
        }
        
        return result;
    }
    
    function initAddressAutocomplete() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–ª—è –∞–¥—Ä–µ—Å–∞ WooCommerce
        var addressInput = $('#billing_address_1, #shipping_address_1');
        if (addressInput.length === 0) {
            return;
        }
        
        $('#address-suggestions').remove();
        
        setupSmartAutocomplete();
    }
    
    function setupSmartAutocomplete() {
        var addressInput = $('#billing_address_1, #shipping_address_1');
        if (addressInput.length === 0) {
            return;
        }
        
        // –†–∞–±–æ—Ç–∞–µ–º —Å –ø–µ—Ä–≤—ã–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º –ø–æ–ª–µ–º
        addressInput = addressInput.first();
        
        var suggestionsContainer = $(`
            <div id="address-suggestions" class="smart-address-suggestions" style="display: none;">
                <div class="suggestions-header">
                    <span class="suggestions-title">–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥</span>
                    <span class="suggestions-count"></span>
                </div>
                <div class="suggestions-list"></div>
                <div class="suggestions-footer">
                    <small>üí° –ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞</small>
                </div>
            </div>
        `);
        
        addressInput.parent().css('position', 'relative');
        addressInput.parent().append(suggestionsContainer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
        if (!$('#smart-search-styles').length) {
            $('head').append(`
                <style id="smart-search-styles">
                .smart-address-suggestions {
                    position: absolute;
                    top: 100%;
                    left: 0;
                    right: 0;
                    background: white;
                    border: 1px solid #e1e5e9;
                    border-radius: 8px;
                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
                    z-index: 1000;
                    max-height: 250px;
                    overflow-y: auto;
                    margin-top: 4px;
                }
                
                .suggestions-header {
                    padding: 10px 12px;
                    border-bottom: 1px solid #f0f0f0;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    background: #f8f9fa;
                }
                
                .suggestions-title {
                    font-weight: 600;
                    color: #333;
                    font-size: 13px;
                }
                
                .suggestions-count {
                    font-size: 11px;
                    color: #666;
                }
                
                .suggestion-item {
                    display: flex;
                    align-items: center;
                    padding: 12px 14px;
                    cursor: pointer;
                    transition: background-color 0.15s ease;
                    border-bottom: 1px solid #f5f5f5;
                }
                
                .suggestion-item:hover {
                    background-color: #f8f9fa;
                }
                
                .suggestion-item:last-child {
                    border-bottom: none;
                }
                
                .suggestion-icon {
                    font-size: 16px;
                    margin-right: 10px;
                    opacity: 0.7;
                }
                
                .suggestion-content {
                    flex: 1;
                }
                
                .suggestion-title {
                    font-weight: 500;
                    color: #333;
                    margin-bottom: 2px;
                    font-size: 14px;
                }
                
                .suggestion-title mark {
                    background-color: #fff3cd;
                    color: #856404;
                    padding: 0 2px;
                    border-radius: 2px;
                }
                
                .suggestion-subtitle {
                    font-size: 12px;
                    color: #666;
                }
                
                .suggestions-footer {
                    padding: 8px 12px;
                    background: #f8f9fa;
                    border-top: 1px solid #f0f0f0;
                    text-align: center;
                    position: sticky;
                    bottom: 0;
                }
                
                .suggestions-footer small {
                    color: #666;
                    font-size: 11px;
                }
                </style>
            `);
        }
        
        var currentSuggestions = [];
        
        addressInput.on('input', function() {
            var query = $(this).val().trim();
            
            if (query.length >= 2) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
                showSearchLoader();
                
                addressSearch.search(query, function(suggestions) {
                    currentSuggestions = suggestions;
                    hideSearchLoader();
                    showAddressSuggestions(suggestions, query);
                });
            } else {
                hideAddressSuggestions();
                hideSearchLoader();
            }
        });
        
        function showSearchLoader() {
            var container = suggestionsContainer.find('.suggestions-list');
            container.html(`
                <div class="suggestion-item">
                    <div class="suggestion-icon">üîÑ</div>
                    <div class="suggestion-content">
                        <div class="suggestion-title">–ü–æ–∏—Å–∫ –≥–æ—Ä–æ–¥–æ–≤...</div>
                        <div class="suggestion-subtitle">–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥</div>
                    </div>
                </div>
            `);
            suggestionsContainer.find('.suggestions-count').text('–ü–æ–∏—Å–∫...');
            suggestionsContainer.show();
        }
        
        function hideSearchLoader() {
            // –õ–æ–∞–¥–µ—Ä —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        }
        
        function showAddressSuggestions(suggestions, query) {
            var container = suggestionsContainer.find('.suggestions-list');
            container.empty();
            
            if (suggestions.length === 0) {
                container.html('<div class="suggestion-item"><div class="suggestion-content"><div class="suggestion-title">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div><div class="suggestion-subtitle">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å</div></div></div>');
                suggestionsContainer.find('.suggestions-count').text('0 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
            } else {
                suggestions.forEach(function(suggestion, index) {
                    var highlightedCity = highlightQuery(suggestion.city, query);
                    
                    var item = $(`
                        <div class="suggestion-item" data-index="${index}">
                            <div class="suggestion-icon">üèôÔ∏è</div>
                            <div class="suggestion-content">
                                <div class="suggestion-title">${highlightedCity}</div>
                                <div class="suggestion-subtitle">–†–æ—Å—Å–∏—è</div>
                            </div>
                        </div>
                    `);
                    
                    item.on('click', function() {
                        selectSuggestion(suggestion);
                    });
                    
                    container.append(item);
                });
                
                suggestionsContainer.find('.suggestions-count').text(`${suggestions.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
            }
            
            suggestionsContainer.show();
        }
        
        function highlightQuery(text, query) {
            if (!query || !text) return text;
            
            var regex = new RegExp(`(${query})`, 'gi');
            return text.replace(regex, '<mark>$1</mark>');
        }
        
        function selectSuggestion(suggestion) {
            addressInput.val(suggestion.city);
            hideAddressSuggestions();
            
            saveRecentSearch(suggestion);
            
            // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥
            window.lastSelectedCity = suggestion.city;
            
            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≤—ã–±–æ—Ä –ü–í–ó —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –≥–æ—Ä–æ–¥–∞
            if (window.currentSearchCity && window.currentSearchCity !== suggestion.city) {
                clearSelectedPoint();
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ü–í–ó
            showPvzLoader();
            
            debouncer.debounce('cdek-search', () => {
                searchCdekPoints(suggestion.city);
            }, 50, 6);
        }
        
        function saveRecentSearch(suggestion) {
            try {
                var recentSearches = JSON.parse(localStorage.getItem('cdek_recent_searches') || '[]');
                
                recentSearches = recentSearches.filter(item => item.city !== suggestion.city);
                
                recentSearches.unshift({
                    city: suggestion.city,
                    timestamp: Date.now()
                });
                
                recentSearches = recentSearches.slice(0, 5);
                
                localStorage.setItem('cdek_recent_searches', JSON.stringify(recentSearches));
            } catch (error) {
                console.log('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞:', error);
            }
        }
        
        function hideAddressSuggestions() {
            suggestionsContainer.hide();
        }
        
        $(document).on('click', function(e) {
            if (!$(e.target).closest('#address-suggestions, #billing_address_1, #shipping_address_1').length) {
                hideAddressSuggestions();
            }
        });
    }
    
    // ========== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –ö–ê–†–¢–û–ô ==========
    
    function initYandexMap() {
        const mapContainer = document.getElementById('cdek-map');
        
        if (!mapContainer) {
            console.log('üö´ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
        mapContainer.style.cssText = 'display: block !important; width: 100% !important; height: 450px !important; visibility: visible !important; position: relative !important; opacity: 1 !important;';
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –ª–∏ —É–∂–µ –∫–∞—Ä—Ç–∞
        if (window.cdekMap && typeof window.cdekMap.getCenter === 'function') {
            console.log('‚úÖ –ö–∞—Ä—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä');
            setTimeout(() => {
                try {
                    window.cdekMap.container.fitToViewport();
                } catch (e) {
                    console.log('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã:', e);
                }
            }, 100);
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
        if (typeof ymaps === 'undefined') {
            console.warn('üîÑ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∂–¥–µ–º...');
            setTimeout(() => initYandexMap(), 500);
            return;
        }
        
        console.log('üó∫Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—É—é –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—É');
        
        ymaps.ready(function() {
            try {
                // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                mapContainer.innerHTML = '';
                
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç—É
                cdekMap = new ymaps.Map(mapContainer, {
                    center: [55.753994, 37.622093], // –ú–æ—Å–∫–≤–∞
                    zoom: 10,
                    controls: ['zoomControl', 'searchControl']
                }, {
                    suppressMapOpenBlock: true
                });
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
                window.cdekMap = cdekMap;
                
                console.log('‚úÖ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
                
                // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–∞—Ä—Ç—ã
                setTimeout(() => {
                    if (cdekMap && cdekMap.container) {
                        cdekMap.container.fitToViewport();
                    }
                }, 100);
                
                // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Ö
                if (cdekPoints && cdekPoints.length > 0) {
                    displayCdekPoints(cdekPoints);
                }
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç—ã:', error);
                showMapFallback();
            }
        });
    }
    
    function showMapFallback() {
        var mapContainer = document.getElementById('cdek-map');
        if (!mapContainer) return;
        
        mapContainer.innerHTML = `
            <div style="
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                height: 450px;
                background: #f8f9fa;
                border: 2px dashed #dee2e6;
                border-radius: 8px;
                color: #6c757d;
                text-align: center;
                padding: 20px;
            ">
                <div style="font-size: 48px; margin-bottom: 20px;">üó∫Ô∏è</div>
                <h4 style="margin: 0 0 10px 0; color: #495057;">–ö–∞—Ä—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h4>
                <p style="margin: 0 0 15px 0; font-size: 14px;">–Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ</p>
                <div id="fallback-points-list"></div>
            </div>
        `;
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö —Å–ø–∏—Å–∫–æ–º
        if (cdekPoints && cdekPoints.length > 0) {
            displayPointsAsList();
        }
    }
    
    function displayPointsAsList() {
        var listContainer = document.getElementById('fallback-points-list');
        if (!listContainer || !cdekPoints) return;
        
        var html = '<h5 style="margin: 0 0 15px 0;">–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏:</h5>';
        
        cdekPoints.forEach(function(point, index) {
            var pointName = point.name || '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏';
            var address = '';
            
            if (point.location && point.location.address_full) {
                address = point.location.address_full;
            } else if (point.location && point.location.address) {
                address = point.location.address;
            }
            
            html += `
                <div class="fallback-point-item" style="
                    padding: 10px;
                    margin-bottom: 10px;
                    border: 1px solid #e9ecef;
                    border-radius: 4px;
                    cursor: pointer;
                    transition: background-color 0.2s;
                " data-point-index="${index}" onclick="selectPointFromList(${index})">
                    <div style="font-weight: bold; margin-bottom: 5px;">${pointName}</div>
                    <div style="font-size: 12px; color: #6c757d;">${address}</div>
                    <div style="font-size: 12px; color: #007cba;">–ö–æ–¥: ${point.code}</div>
                </div>
            `;
        });
        
        listContainer.innerHTML = html;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        $(document).on('mouseenter', '.fallback-point-item', function() {
            $(this).css('background-color', '#f8f9fa');
        }).on('mouseleave', '.fallback-point-item', function() {
            $(this).css('background-color', 'transparent');
        });
    }
    
    function selectPointFromList(index) {
        if (cdekPoints && cdekPoints[index]) {
            selectCdekPoint(cdekPoints[index]);
        }
    }
    
    // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ onclick
    window.selectPointFromList = selectPointFromList;
    
    // ========== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–û–ò–°–ö–ê –ò –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ü–£–ù–ö–¢–û–í –í–´–î–ê–ß–ò ==========
    
    function searchCdekPoints(address) {
        var parsedAddress = parseAddress(address);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—â–µ–º –ª–∏ –º—ã —Ç–æ—Ç –∂–µ –≥–æ—Ä–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ
        if (window.currentSearchCity === parsedAddress.city && cdekPoints && cdekPoints.length > 0) {
            hidePvzLoader();
            displayCdekPoints(cdekPoints);
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –≤—ã–±–æ—Ä –ü–í–ó —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–º–µ–Ω–µ –≥–æ—Ä–æ–¥–∞
        if (window.currentSearchCity && window.currentSearchCity !== parsedAddress.city) {
            clearSelectedPoint();
        }
        
        window.currentSearchCity = parsedAddress.city;
        
        console.log('üîç –ü–æ–∏—Å–∫ –ø—É–Ω–∫—Ç–æ–≤ –°–î–≠–ö –¥–ª—è –≥–æ—Ä–æ–¥–∞:', parsedAddress.city);
        
        performCdekSearch();
    }
    
    function performCdekSearch() {
        if (typeof cdek_ajax === 'undefined') return;
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
        var searchAddress = '–†–æ—Å—Å–∏—è';
        if (window.currentSearchCity) {
            searchAddress = window.currentSearchCity;
        }
        
        console.log('üì° –ó–∞–ø—Ä–æ—Å –∫ API –°–î–≠–ö –¥–ª—è:', searchAddress);
        
        $.ajax({
            url: cdek_ajax.ajax_url,
            type: 'POST',
            dataType: 'json',
            timeout: 30000,
            data: {
                action: 'get_cdek_points',
                address: searchAddress,
                nonce: cdek_ajax.nonce
            },
            success: function(response) {
                hidePvzLoader();
                if (response.success && response.data) {
                    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏:', response.data.length);
                    displayCdekPoints(response.data);
                } else {
                    showPvzError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏');
                }
            },
            error: function(xhr, status, error) {
                hidePvzLoader();
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏:', error);
                showPvzError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏');
            }
        });
    }
    
    function displayCdekPoints(points) {
        cdekPoints = points;
        
        if (!points || points.length === 0) {
            var cityInfo = window.currentSearchCity ? ` –≤ –≥–æ—Ä–æ–¥–µ "${window.currentSearchCity}"` : '';
            $('#cdek-points-count').text(`–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${cityInfo}`);
            return;
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—É–Ω–∫—Ç—ã –ø–æ –≥–æ—Ä–æ–¥—É
        var filteredPoints = points.filter(function(point) {
            if (window.currentSearchCity) {
                var pointCity = '';
                
                if (point.location && point.location.city) {
                    pointCity = point.location.city.trim();
                }
                
                if (!pointCity && point.location && point.location.address) {
                    var addressParts = point.location.address.split(',');
                    if (addressParts.length > 0) {
                        pointCity = addressParts[0].trim();
                    }
                }
                
                if (pointCity) {
                    pointCity = pointCity.replace(/^(–≥\.?\s*|–≥–æ—Ä–æ–¥\s+)/i, '').trim();
                }
                
                var searchCityLower = window.currentSearchCity.toLowerCase().trim();
                var pointCityLower = pointCity.toLowerCase().trim();
                
                if (pointCityLower && searchCityLower) {
                    // –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
                    var isMatch = false;
                    
                    // 1. –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
                    if (pointCityLower === searchCityLower) {
                        isMatch = true;
                    }
                    
                    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞—á–∞–ª—É (–¥–ª—è —Å–ª—É—á–∞–µ–≤ —Ç–∏–ø–∞ "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥" –∏ "–°–ü–±")
                    else if (pointCityLower.startsWith(searchCityLower) || searchCityLower.startsWith(pointCityLower)) {
                        // –ù–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –¥–ª–∏–Ω–µ –Ω–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è (–Ω–µ –±–æ–ª–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤)
                        var lengthDiff = Math.abs(pointCityLower.length - searchCityLower.length);
                        if (lengthDiff <= 3) {
                            isMatch = true;
                        }
                    }
                    
                    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Å–ª–æ–≤–∞–º (–¥–ª—è —Å–ª—É—á–∞–µ–≤ "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥" -> "–ø–µ—Ç–µ—Ä–±—É—Ä–≥")
                    else if (searchCityLower.length >= 4) {
                        var searchWords = searchCityLower.split(/[\s\-]+/);
                        var pointWords = pointCityLower.split(/[\s\-]+/);
                        
                        var hasMatchingWord = false;
                        for (var i = 0; i < searchWords.length; i++) {
                            for (var j = 0; j < pointWords.length; j++) {
                                if (searchWords[i].length >= 4 && pointWords[j].length >= 4) {
                                    if (searchWords[i] === pointWords[j]) {
                                        hasMatchingWord = true;
                                        break;
                                    }
                                }
                            }
                            if (hasMatchingWord) break;
                        }
                        isMatch = hasMatchingWord;
                    }
                    
                    if (!isMatch) {
                        console.log('üö´ –ü—É–Ω–∫—Ç –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω:', pointCity, '(–∏—Å–∫–∞–ª–∏:', window.currentSearchCity + ')');
                        return false;
                    } else {
                       
                    }
                }
            }
            
            return true;
        });
        
        
        // –ü–û–ö–ê–ó–´–í–ê–ï–ú –í–°–ï –ü–£–ù–ö–¢–´ –ë–ï–ó –û–ì–†–ê–ù–ò–ß–ï–ù–ò–ô
        var pointsToShow = filteredPoints;
        
        var pointsInfo = '';
        if (filteredPoints.length > 0) {
            var locationInfo = window.currentSearchCity ? ` –≤ –≥–æ—Ä–æ–¥–µ "${window.currentSearchCity}"` : '';
            pointsInfo = `–ù–∞–π–¥–µ–Ω–æ ${filteredPoints.length} –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏${locationInfo}`;
        } else {
            var locationInfo = window.currentSearchCity ? ` –≤ –≥–æ—Ä–æ–¥–µ "${window.currentSearchCity}"` : '';
            pointsInfo = `–ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${locationInfo}`;
        }
        $('#cdek-points-count').text(pointsInfo);
        
        // –¢–∞–∫–∂–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—É–Ω–∫—Ç–æ–≤
        displayPointsList(pointsToShow);
        
        // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫
        if (!cdekMap && typeof ymaps === 'undefined') {
            displayPointsAsList();
            return;
        }
        
        // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞, –∂–¥–µ–º
        if (!cdekMap) {
            setTimeout(() => displayCdekPoints(points), 200);
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –∫–∞—Ä—Ç—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Ç–æ—á–∫–∏
        cdekMap.geoObjects.removeAll();
        
        var bounds = [];
        
        pointsToShow.forEach(function(point, index) {
            if (point.location && point.location.latitude && point.location.longitude) {
                var coords = [point.location.latitude, point.location.longitude];
                bounds.push(coords);
                
                var placemark = new ymaps.Placemark(coords, {
                    balloonContent: formatPointInfo(point),
                    hintContent: point.name
                }, {
                    preset: 'islands#redIcon'
                });
                
                placemark.events.add('click', function() {
                    selectCdekPoint(point);
                });
                
                cdekMap.geoObjects.add(placemark);
            }
        });
        
        // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º —Ç–æ—á–∫–∞–º
        if (bounds.length > 0) {
            if (bounds.length === 1) {
                cdekMap.setCenter(bounds[0], 14);
            } else {
                var minLat = Math.min.apply(null, bounds.map(function(coord) { return coord[0]; }));
                var maxLat = Math.max.apply(null, bounds.map(function(coord) { return coord[0]; }));
                var minLon = Math.min.apply(null, bounds.map(function(coord) { return coord[1]; }));
                var maxLon = Math.max.apply(null, bounds.map(function(coord) { return coord[1]; }));
                
                var centerLat = (minLat + maxLat) / 2;
                var centerLon = (minLon + maxLon) / 2;
                
                var latDiff = maxLat - minLat;
                var lonDiff = maxLon - minLon;
                var maxDiff = Math.max(latDiff, lonDiff);
                
                var zoom = 12;
                if (maxDiff < 0.01) zoom = 15;
                else if (maxDiff < 0.05) zoom = 13;
                else if (maxDiff < 0.1) zoom = 12;
                else if (maxDiff < 0.5) zoom = 10;
                else zoom = 8;
                
                cdekMap.setCenter([centerLat, centerLon], zoom);
            }
        }
    }
    
    function displayPointsList(points) {
        var listContainer = $('#cdek-points-list-content');
        var listWrapper = $('#cdek-points-list');
        
        if (!points || points.length === 0) {
            listWrapper.hide();
            return;
        }
        
        var html = '';
        points.forEach(function(point, index) {
            var pointName = point.name || '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏';
            var address = '';
            
            if (point.location && point.location.address_full) {
                address = point.location.address_full;
            } else if (point.location && point.location.address) {
                address = point.location.address;
            }
            
            html += `
                <div class="cdek-point-item" style="
                    padding: 12px;
                    margin-bottom: 8px;
                    border: 1px solid #e9ecef;
                    border-radius: 6px;
                    cursor: pointer;
                    transition: all 0.2s;
                " data-point-index="${index}">
                    <div style="font-weight: 600; margin-bottom: 6px; color: #333;">${pointName}</div>
                    <div style="font-size: 13px; color: #666; margin-bottom: 4px;">${address}</div>
                    <div style="font-size: 12px; color: #007cba;">–ö–æ–¥: ${point.code}</div>
                </div>
            `;
        });
        
        listContainer.html(html);
        listWrapper.show();
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–æ–≤ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–ø–∏—Å–∫–∞
        $('.cdek-point-item').on('click', function() {
            var index = $(this).data('point-index');
            if (points[index]) {
                selectCdekPoint(points[index]);
            }
        });
        
        // –°—Ç–∏–ª–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        $('.cdek-point-item').on('mouseenter', function() {
            $(this).css({
                'background-color': '#f8f9fa',
                'border-color': '#007cba',
                'transform': 'translateY(-1px)',
                'box-shadow': '0 2px 8px rgba(0,0,0,0.1)'
            });
        }).on('mouseleave', function() {
            $(this).css({
                'background-color': 'transparent',
                'border-color': '#e9ecef',
                'transform': 'translateY(0)',
                'box-shadow': 'none'
            });
        });
    }
    
    function selectCdekPoint(point) {
        selectedPoint = point;
        
        console.log('‚úÖ –í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:', point.code, point.name);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ü–í–ó
        window.selectedCdekPoint = {
            code: point.code,
            name: point.name,
            address: point.location && point.location.address ? point.location.address : '',
            city: point.location && point.location.city ? point.location.city : ''
        };
        
        $('#cdek-point-info').html(formatPointInfo(point));
        $('#cdek-selected-point').show();
        
        if (cdekMap && point.location) {
            cdekMap.setCenter([point.location.latitude, point.location.longitude], 15);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è
        $('#cdek-selected-point-code').val(point.code);
        $('#cdek-selected-point-data').val(JSON.stringify(point));
        
        updateOrderSummary(point);
    }
    
    function clearSelectedPoint() {
        selectedPoint = null;
        window.selectedCdekPoint = null;
        
        $('#cdek-selected-point').hide();
        $('#cdek-point-info').html('');
        
        $('#cdek-selected-point-code').val('');
        $('#cdek-selected-point-data').val('');
        $('#cdek-delivery-cost').val('');
        
        console.log('üóëÔ∏è –û—á–∏—â–µ–Ω –≤—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏');
    }
    
    function formatPointInfo(point) {
        var pointName = point.name || '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏';
        if (pointName.includes(',')) {
            pointName = pointName.split(',').slice(1).join(',').trim();
        }
        
        var html = `<strong>${pointName}</strong><br>`;
        
        if (point.location && point.location.address_full) {
            html += `–ê–¥—Ä–µ—Å: ${point.location.address_full}<br>`;
        } else if (point.address) {
            html += `–ê–¥—Ä–µ—Å: ${point.address}<br>`;
        }
        
        if (point.phones && Array.isArray(point.phones) && point.phones.length > 0) {
            var phoneNumbers = point.phones.map(function(phone) {
                return phone.number || phone;
            }).join(', ');
            html += `–¢–µ–ª–µ—Ñ–æ–Ω: ${phoneNumbers}<br>`;
        } else if (point.phone) {
            html += `–¢–µ–ª–µ—Ñ–æ–Ω: ${point.phone}<br>`;
        }
        
        html += `–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: ${formatWorkTime(point.work_time, point.work_time_list)}<br>`;
        
        if (point.code) {
            html += `–ö–æ–¥: ${point.code}<br>`;
        }
        
        return html;
    }
    
    function formatWorkTime(workTime, workTimeList) {
        if (workTimeList && Array.isArray(workTimeList) && workTimeList.length > 0) {
            var days = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'];
            var schedule = '';
            
            workTimeList.forEach(function(time) {
                if (time.day !== undefined && time.time) {
                    schedule += days[time.day - 1] + ': ' + time.time + ' ';
                }
            });
            
            return schedule || '–ù–µ —É–∫–∞–∑–∞–Ω';
        }
        
        if (workTime && typeof workTime === 'string') {
            return workTime;
        }
        
        return '–ù–µ —É–∫–∞–∑–∞–Ω';
    }
    
    function updateOrderSummary(point) {
        showDeliveryCalculationLoader();
        
        calculateDeliveryCost(point, function(deliveryCost) {
            hideDeliveryCalculationLoader();
            
            console.log('üí∞ –ü–æ–ª—É—á–µ–Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:', deliveryCost, '—Ä—É–±.');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
            $('#cdek-delivery-cost').val(deliveryCost);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —á–µ–∫–∞—É—Ç–µ
            updateClassicShippingCost(point, deliveryCost);
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —á–µ–∫–∞—É—Ç –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã
            console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞...');
            $('body').trigger('update_checkout');
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ WooCommerce
            console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ WooCommerce...');
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è
            $('#cdek-selected-point-code').val(point.code);
            $('#cdek-delivery-cost').val(deliveryCost);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —á–µ–∫–∞—É—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
            $(document.body).trigger('update_checkout');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥ —á–µ—Ä–µ–∑ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü–∏—é —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
            setTimeout(() => {
                updateTotalCost(deliveryCost);
                
                // –ú—è–≥–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¢-–ë–∞–Ω–∫–∞
                setTimeout(() => {
                    console.log('üîÑ –ú—è–≥–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –¢-–ë–∞–Ω–∫–∞...');
                    
                    // 1. –ü–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
                    if (typeof window.tbank_init === 'function') {
                        window.tbank_init();
                        console.log('‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ tbank_init');
                    }
                    
                    if (typeof window.TinkoffPayRow !== 'undefined') {
                        window.TinkoffPayRow.init();
                        console.log('‚úÖ –ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω TinkoffPayRow');
                    }
                    
                    // 2. –ú—è–≥–∫–∏–π trigger —Å–æ–±—ã—Ç–∏—è
                    var $tbankRadio = $('input[name="payment_method"][value="tbank"]');
                    if ($tbankRadio.length > 0) {
                        $tbankRadio.trigger('change');
                        console.log('‚úÖ –¢-–ë–∞–Ω–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–ø—É—â–µ–Ω—ã');
                    }
                    
                }, 200);
            }, 500);
        });
    }
    
    function updateClassicShippingCost(point, deliveryCost) {
        console.log('üí∞ –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:', deliveryCost, '—Ä—É–±.');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –º–µ—Ç–æ–¥–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –°–î–≠–ö
        var cdekShippingLabels = $('label[for*="shipping_method"]:contains("–°–î–≠–ö"), label[for*="shipping_method"]:contains("cdek")');
        
        cdekShippingLabels.each(function() {
            var $label = $(this);
            
            var newText;
            if (deliveryCost === 0) {
                // –î–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                if (point.name.includes('–°–∞–º–æ–≤—ã–≤–æ–∑')) {
                    newText = 'üìç ' + point.name + ' - –ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
                } else if (point.name.includes('–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º')) {
                    newText = 'üìû ' + point.name + ' - –ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
                } else {
                    newText = point.name + ' - –ë–µ—Å–ø–ª–∞—Ç–Ω–æ';
                }
            } else {
                // –î–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ –°–î–≠–ö
                var pointName = point.name || '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏';
                if (pointName.includes(',')) {
                    pointName = pointName.split(',').slice(1).join(',').trim();
                }
                
                var displayName = pointName;
                if (point.location && point.location.city) {
                    displayName = point.location.city + ', ' + pointName.replace(point.location.city, '').replace(/^[,\s]+/, '');
                }
                
                newText = 'üöö –°–î–≠–ö: ' + displayName + ' - ' + deliveryCost + ' —Ä—É–±.';
            }
            
            $label.html(newText);
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ –∑–∞–∫–∞–∑–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
        var shippingRow = $('.woocommerce-shipping-totals.shipping td');
        if (shippingRow.length > 0) {
            console.log('üìä –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ');
            shippingRow.html('<span class="amount">' + deliveryCost + ' —Ä—É–±.</span>');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞–ø—Ä—è–º—É—é
        updateTotalCost(deliveryCost);
        
        // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –æ–±–Ω–æ–≤–ª—è–µ–º WooCommerce
        setTimeout(() => {
            console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞...');
            $('body').trigger('update_checkout');
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –º–µ—Ç–æ–¥—ã –¥–æ—Å—Ç–∞–≤–∫–∏
            $('input[name^="shipping_method"]').trigger('change');
        }, 100);
    }
    
    function updateTotalCost(deliveryCost) {
        console.log('üí∞ –û–±–Ω–æ–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π:', deliveryCost, '—Ä—É–±.');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–æ–≤
        var subtotalElement = $('.cart-subtotal .amount, .order-subtotal .amount');
        var subtotal = 0;
        
        if (subtotalElement.length > 0) {
            var subtotalText = subtotalElement.first().text();
            subtotal = parsePrice(subtotalText);
            console.log('üìä –ü–æ–¥—ã—Ç–æ–≥ –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏:', subtotal, '—Ä—É–±.');
        }
        
        // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
        var newTotal = subtotal + deliveryCost;
        console.log('üßÆ –ù–æ–≤–∞—è –æ–±—â–∞—è —Å—É–º–º–∞:', newTotal, '—Ä—É–±.');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ - –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–≤
        var totalUpdated = false;
        
        // –í–∞—Ä–∏–∞–Ω—Ç 1: .order-total .amount
        var totalElement = $('.order-total .amount');
        if (totalElement.length > 0) {
            totalElement.html(newTotal + ' —Ä—É–±.');
            totalUpdated = true;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (.order-total .amount)');
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 2: .order-total .woocommerce-Price-amount
        var totalElement2 = $('.order-total .woocommerce-Price-amount');
        if (totalElement2.length > 0) {
            totalElement2.html(newTotal + ' —Ä—É–±.');
            totalUpdated = true;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (.order-total .woocommerce-Price-amount)');
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 3: .order-total td strong
        var totalElement3 = $('.order-total td strong');
        if (totalElement3.length > 0) {
            totalElement3.html('<span class="woocommerce-Price-amount amount">' + newTotal + ' —Ä—É–±.</span>');
            totalUpdated = true;
            console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (.order-total td strong)');
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 4: –ë–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –ø–æ–∏—Å–∫ –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã
        if (!totalUpdated) {
            var totalElement4 = $('.order-total strong, .order-total .amount, .woocommerce-checkout-review-order-table .order-total .amount');
            if (totalElement4.length > 0) {
                totalElement4.each(function() {
                    $(this).html('<span class="woocommerce-Price-amount amount">' + newTotal + ' —Ä—É–±.</span>');
                });
                totalUpdated = true;
                console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (—à–∏—Ä–æ–∫–∏–π –ø–æ–∏—Å–∫)');
            }
        }
        
        // –í–∞—Ä–∏–∞–Ω—Ç 5: –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ data-–∞—Ç—Ä–∏–±—É—Ç—ã
        if (!totalUpdated) {
            var totalElement5 = $('[data-total], .total, .checkout-total');
            if (totalElement5.length > 0) {
                totalElement5.html(newTotal + ' —Ä—É–±.');
                totalUpdated = true;
                console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ (data-–∞—Ç—Ä–∏–±—É—Ç—ã)');
            }
        }
        
        if (!totalUpdated) {
            console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤–æ–π —Å—É–º–º—ã');
            console.log('üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:');
            console.log('order-total elements:', $('.order-total').length);
            console.log('amount elements:', $('.amount').length);
            console.log('total elements:', $('[class*="total"]').length);
        }
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–≤–µ–¥–æ–º–ª—è–µ–º –æ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π
        $(document).trigger('cdek_price_updated', {
            newTotal: newTotal,
            deliveryCost: deliveryCost,
            subtotal: subtotal
        });
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
        $(document).trigger('checkout_updated');
        $(document).trigger('woocommerce_checkout_updated');
        $(document).trigger('payment_method_updated');
        
        // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¢-–ë–∞–Ω–∫–∞
        $(document).trigger('tbank_amount_updated', { amount: newTotal });
        
        // –î–µ–ª–∏–∫–∞—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Ñ–æ—Ä–º
        setTimeout(() => {
            console.log('üîÑ –î–µ–ª–∏–∫–∞—Ç–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Ñ–æ—Ä–º—ã...');
            
            // 1. –ú—è–≥–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¢-–ë–∞–Ω–∫–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è DOM
            var $tbankMethod = $('input[name="payment_method"][value="tbank"]');
            if ($tbankMethod.length > 0 && $tbankMethod.is(':checked')) {
                console.log('üéØ –ù–∞–π–¥–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –¢-–ë–∞–Ω–∫, –º—è–≥–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫...');
                
                // –¢–æ–ª—å–∫–æ trigger —Å–æ–±—ã—Ç–∏—è –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è DOM
                $tbankMethod.trigger('change');
                setTimeout(() => {
                    $tbankMethod.trigger('click');
                    console.log('üîÑ –¢-–ë–∞–Ω–∫ –º—è–≥–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω');
                }, 50);
            }
            
            // 2. –ú—è–≥–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞
            $(document.body).trigger('update_checkout');
            
        }, 100);
        
        // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
        console.log('üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', newTotal, '‚ÇΩ', '(—Ç–æ–≤–∞—Ä—ã:', subtotal, '+ –¥–æ—Å—Ç–∞–≤–∫–∞:', deliveryCost, ')');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–æ–ª—è —Å —Å—É–º–º–æ–π
        setTimeout(() => {
            $('*').filter(function() {
                return $(this).text().includes('180') && $(this).text().includes('‚ÇΩ');
            }).each(function() {
                var currentText = $(this).text();
                var newText = currentText.replace(/180\s*‚ÇΩ/g, newTotal + ' ‚ÇΩ');
                if (currentText !== newText) {
                    $(this).text(newText);
                    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç —Å 180‚ÇΩ –Ω–∞', newTotal + '‚ÇΩ');
                }
            });
            
            // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—É–º–º—ã
            console.log('üîÑ –°—É–º–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ:', newTotal, '‚ÇΩ');
            
        }, 500);
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        setTimeout(() => {
            console.log('üîß –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤...');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ –∑–∞–∫–∞–∑–∞ (–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–æ–Ω–∞)
            $('.shop_table .order-total .amount').each(function() {
                var $elem = $(this);
                var text = $elem.text();
                if (text.includes('180') && text.includes('‚ÇΩ')) {
                    $elem.html('<bdi>' + newTotal + '&nbsp;<span class="woocommerce-Price-currencySymbol">‚ÇΩ</span></bdi>');
                    console.log('üîß –û–±–Ω–æ–≤–ª–µ–Ω order-total amount');
                }
            });
            
        }, 200);
        
        // –§–∏–Ω–∞–ª—å–Ω–æ–µ –º—è–≥–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        setTimeout(() => {
            console.log('üîÑ –§–∏–Ω–∞–ª—å–Ω–æ–µ –º—è–≥–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞...');
            $(document.body).trigger('update_checkout');
        }, 1000);
    }
    
    // ========== –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ê–ì–†–£–ó–ß–ò–ö–û–í –ò –û–®–ò–ë–û–ö ==========
    
    function showDeliveryCalculationLoader() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –≤ –±–ª–æ–∫–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
        $('#cdek-point-info').append('<div id="cost-loader" style="margin-top: 10px; color: #666;"><i>–†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏...</i></div>');
    }
    
    function hideDeliveryCalculationLoader() {
        $('#cost-loader').remove();
    }
    
    function showPvzLoader() {
        $('#cdek-points-count').html('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏...');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –∫–∞—Ä—Ç—ã
        var mapContainer = $('#cdek-map-container');
        if (mapContainer.length > 0 && $('#pvz-loader').length === 0) {
            var loader = $(`
                <div id="pvz-loader" style="
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    background: rgba(255, 255, 255, 0.95);
                    padding: 20px;
                    border-radius: 8px;
                    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                    z-index: 1000;
                    text-align: center;
                ">
                    <div style="
                        width: 30px;
                        height: 30px;
                        border: 3px solid #f3f3f3;
                        border-top: 3px solid #007cba;
                        border-radius: 50%;
                        animation: spin 1s linear infinite;
                        margin: 0 auto 10px;
                    "></div>
                    <div style="color: #666; font-size: 14px;">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏...</div>
                </div>
            `);
            mapContainer.css('position', 'relative').append(loader);
            
            // –î–æ–±–∞–≤–ª—è–µ–º CSS –∞–Ω–∏–º–∞—Ü–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            if (!$('#pvz-loader-styles').length) {
                $('head').append(`
                    <style id="pvz-loader-styles">
                    @keyframes spin {
                        0% { transform: rotate(0deg); }
                        100% { transform: rotate(360deg); }
                    }
                    </style>
                `);
            }
        }
    }
    
    function hidePvzLoader() {
        $('#pvz-loader').remove();
    }
    
    function showPvzError(message) {
        $('#cdek-points-count').html('‚ùå ' + message);
        setTimeout(() => {
            $('#cdek-points-count').html('–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏');
        }, 3000);
    }
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–æ–π –°–î–≠–ö
    function hideCdekHint() {
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –≤—ã–±–æ—Ä–µ –≥–æ—Ä–æ–¥–∞
        $('p:contains("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –ø–æ–ª–µ ¬´–ê–¥—Ä–µ—Å¬ª –≤—ã—à–µ, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏")').hide();
    }
    
    function showCdekHint() {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –≤—ã–±–æ—Ä–µ –≥–æ—Ä–æ–¥–∞
        $('p:contains("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –ø–æ–ª–µ ¬´–ê–¥—Ä–µ—Å¬ª –≤—ã—à–µ, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏")').show();
    }
    
    // ========== –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –î–õ–Ø –ö–õ–ê–°–°–ò–ß–ï–°–ö–û–ì–û –ß–ï–ö–ê–£–¢–ê ==========
    
    function initCdekDelivery() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —á–µ–∫–∞—É—Ç–∞');
        
        if (isInitialized) {
            console.log('‚è≠Ô∏è –°–î–≠–ö —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç –∏ —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ
        var mapContainers = $('#cdek-map-container');
        if (mapContainers.length > 1) {
            console.log('üóëÔ∏è –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç, —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ');
            mapContainers.slice(1).remove(); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≤—Ç–æ–∫–æ–º–ø–ª–∏—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –≥–æ—Ä–æ–¥–æ–≤
        setTimeout(() => initAddressAutocomplete(), 200);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
        setTimeout(() => initYandexMap(), 300);
        
        isInitialized = true;
        
        console.log('‚úÖ –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —á–µ–∫–∞—É—Ç–∞');
    }
    
    // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π
    window.initCdekDelivery = initCdekDelivery;
    
    // ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ==========
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    $(document).on('click', '.cdek-delivery-option', function() {
        var option = $(this).data('option');
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        $('.cdek-delivery-option').removeClass('active');
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
        $(this).addClass('active');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏
        $('#cdek-delivery-type').val(option);
        
        if (option === 'pickup') {
            // –°–∞–º–æ–≤—ã–≤–æ–∑
            $('#cdek-delivery-content').hide();
            hideCdekHint();
            clearSelectedPoint();
            updateShippingTextForPickup();
            $('#cdek-delivery-cost').val(0);
            $('body').trigger('update_checkout');
        } else if (option === 'manager') {
            // –û–±—Å—É–¥–∏—Ç—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
            $('#cdek-delivery-content').hide();
            hideCdekHint();
            clearSelectedPoint();
            updateShippingTextForManager();
            $('#cdek-delivery-cost').val(0);
            $('body').trigger('update_checkout');
        } else if (option === 'cdek') {
            // –î–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö
            $('#cdek-delivery-content').show();
            showCdekHint();
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ–º –ø—É–Ω–∫—Ç—ã –µ—Å–ª–∏ –≥–æ—Ä–æ–¥ —É–∂–µ –≤–≤–µ–¥–µ–Ω
            var currentAddress = $('#billing_address_1').val();
            if (currentAddress && currentAddress.length > 2) {
                var city = currentAddress.split(',')[0].trim();
                if (city.length > 2) {
                    setTimeout(() => searchCdekPoints(city), 200);
                }
            }
        }
    });
    
    // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    window.updateShippingTextForPickup = function() {
        console.log('üè™ –í—ã–±—Ä–∞–Ω —Å–∞–º–æ–≤—ã–≤–æ–∑');
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –≤—ã–±–æ—Ä–µ –≥–æ—Ä–æ–¥–∞
        hideCdekHint();
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–µ–∫–∞—É—Ç–µ
        updateClassicShippingCost({name: '–°–∞–º–æ–≤—ã–≤–æ–∑ (–≥.–°–∞—Ä–∞—Ç–æ–≤, —É–ª. –û—Å–∏–ø–æ–≤–∞, –¥. 18–∞)'}, 0);
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –°–î–≠–ö –≤ —Å–µ—Å—Å–∏–∏
        if (typeof cdek_ajax !== 'undefined' && cdek_ajax.ajax_url) {
            $.ajax({
                url: cdek_ajax.ajax_url,
                type: 'POST',
                data: {
                    action: 'update_cdek_shipping_cost',
                    cdek_delivery_cost: 0,
                    cdek_delivery_type: 'pickup',
                    nonce: cdek_ajax.nonce
                },
                success: function(response) {
                    console.log('‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—á–∏—â–µ–Ω–∞ –¥–ª—è —Å–∞–º–æ–≤—ã–≤–æ–∑–∞');
                },
                error: function() {
                    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
                }
            });
        }
    };
    
    window.updateShippingTextForManager = function() {
        console.log('üìû –í—ã–±—Ä–∞–Ω–æ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º');
        // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –æ –≤—ã–±–æ—Ä–µ –≥–æ—Ä–æ–¥–∞
        hideCdekHint();
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —á–µ–∫–∞—É—Ç–µ
        updateClassicShippingCost({name: '–û–±—Å—É–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º'}, 0);
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –°–î–≠–ö –≤ —Å–µ—Å—Å–∏–∏
        if (typeof cdek_ajax !== 'undefined' && cdek_ajax.ajax_url) {
            $.ajax({
                url: cdek_ajax.ajax_url,
                type: 'POST',
                data: {
                    action: 'update_cdek_shipping_cost',
                    cdek_delivery_cost: 0,
                    cdek_delivery_type: 'manager',
                    nonce: cdek_ajax.nonce
                },
                success: function(response) {
                    console.log('‚úÖ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –æ—á–∏—â–µ–Ω–∞ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞');
                },
                error: function() {
                    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
                }
            });
        }
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–µ—Ç–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    $(document).on('change', 'input[name^="shipping_method"]', function() {
        console.log('üîÑ –ò–∑–º–µ–Ω–µ–Ω –º–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏:', $(this).val());
        
        if ($(this).val().indexOf('cdek_delivery') !== -1) {
            console.log('‚úÖ –í—ã–±—Ä–∞–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö');
            $('#cdek-map-container, #cdek-map-wrapper').show();
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É
            $('#cdek-map').css({
                'display': 'block !important',
                'visibility': 'visible !important',
                'opacity': '1 !important'
            });
            
            debouncer.debounce('init-cdek', () => initCdekDelivery(), 100);
        } else {
            console.log('‚ùå –í—ã–±—Ä–∞–Ω –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏');
            $('#cdek-map-container, #cdek-map-wrapper').hide();
            clearSelectedPoint();
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É –≤ –ø–æ–ª–µ –∞–¥—Ä–µ—Å–∞
    $(document).on('input', '#billing_address_1, #shipping_address_1', function() {
        var address = $(this).val().trim();
        var city = address.split(',')[0].trim();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ–º –ø—É–Ω–∫—Ç—ã –°–î–≠–ö —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö
        if ($('#cdek-delivery-type').val() === 'cdek' && city.length > 2) {
            debouncer.debounce('city-search', () => searchCdekPoints(city), 500);
        } else if (city.length <= 2) {
            $('#cdek-points-list').hide();
            if (cdekMap) {
                cdekMap.geoObjects.removeAll();
            }
            $('#cdek-points-count').text('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –ø–æ–ª–µ "–ê–¥—Ä–µ—Å" –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—É–Ω–∫—Ç–æ–≤ –≤—ã–¥–∞—á–∏');
        }
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ –≤—ã–±–æ—Ä–∞
    $(document).on('click', '#cdek-clear-selection', function() {
        clearSelectedPoint();
        $('#cdek-points-list').hide();
        if (cdekMap) {
            cdekMap.geoObjects.removeAll();
        }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    $(document).ready(function() {
        console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö
        var cdekSelected = false;
        $('input[name^="shipping_method"]:checked').each(function() {
            if ($(this).val().indexOf('cdek_delivery') !== -1) {
                cdekSelected = true;
                console.log('‚úÖ –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∞ —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ');
            }
        });
        
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Ä—Ç—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        var mapContainers = $('#cdek-map-container');
        if (mapContainers.length > 1) {
            console.log('üóëÔ∏è –ù–∞–π–¥–µ–Ω–æ ' + mapContainers.length + ' –∫–∞—Ä—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ');
            mapContainers.slice(1).remove(); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É
        }
        
        // –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        $('#cdek-map-container, #cdek-map-wrapper').show();
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É
        $('#cdek-map').css({
            'display': 'block !important',
            'visibility': 'visible !important',
            'opacity': '1 !important'
        });
        
        debouncer.debounce('init-cdek-load', () => initCdekDelivery(), 500);
    });
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ–∫–∞—É—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
    $(document).on('updated_checkout', function() {
        // –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ–∫–∞—É—Ç–∞
        setTimeout(() => {
            // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Ä—Ç—ã –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            var mapContainers = $('#cdek-map-container');
            if (mapContainers.length > 1) {
                console.log('üóëÔ∏è –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ–∫–∞—É—Ç–∞ –Ω–∞–π–¥–µ–Ω–æ ' + mapContainers.length + ' –∫–∞—Ä—Ç, —É–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ');
                mapContainers.slice(1).remove(); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É
            }
            
            if ($('#cdek-map-wrapper').is(':visible')) {
                // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
                var deliveryType = $('#cdek-delivery-type').val() || 'cdek';
                $('.cdek-delivery-option').removeClass('active');
                $('.cdek-delivery-option[data-option="' + deliveryType + '"]').addClass('active');
                
                if (deliveryType === 'cdek') {
                    $('#cdek-delivery-content').show();
                } else {
                    $('#cdek-delivery-content').hide();
                }
            }
        }, 100);
    });
    
    console.log('üìã –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ —á–µ–∫–∞—É—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
});
