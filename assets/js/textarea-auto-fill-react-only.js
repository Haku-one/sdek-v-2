jQuery(document).ready(function($) {
    console.log('üîß –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ textarea –ø–æ–ª–µ–π - —Ç–æ–ª—å–∫–æ React —ç–º—É–ª—è—Ü–∏—è');
    
    let updateTimeout;
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    window.currentDeliveryData = {
        dostavka: '',
        manager: ''
    };
    
    // –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    function debouncedUpdate() {
        clearTimeout(updateTimeout);
        updateTimeout = setTimeout(updateTextareaFields, 500);
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–º—É–ª—è—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –≤ React –ø–æ–ª–µ
    function simulateUserInput(element, value) {
        if (!element || !element.length) return;
        
        element.each(function() {
            const textarea = this;
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
            textarea.value = value;
            
            // –ü–æ–ª—É—á–∞–µ–º React fiber instance
            const reactFiber = textarea._reactInternalFiber || 
                              textarea._reactInternalInstance ||
                              Object.keys(textarea).find(key => key.startsWith('__reactFiber')) && textarea[Object.keys(textarea).find(key => key.startsWith('__reactFiber'))];
            
            // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
            const inputEvent = new Event('input', { bubbles: true });
            const changeEvent = new Event('change', { bubbles: true });
            const focusEvent = new Event('focus', { bubbles: true });
            const blurEvent = new Event('blur', { bubbles: true });
            
            // –§–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –ø–æ–ª–µ
            textarea.focus();
            textarea.dispatchEvent(focusEvent);
            
            // –î–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏—è –∫–∞–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            textarea.dispatchEvent(inputEvent);
            textarea.dispatchEvent(changeEvent);
            
            // –£–±–∏—Ä–∞–µ–º —Ñ–æ–∫—É—Å
            textarea.blur();
            textarea.dispatchEvent(blurEvent);
            
            // –¢–∞–∫–∂–µ —á–µ—Ä–µ–∑ jQuery –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            $(textarea).trigger('focus').trigger('input').trigger('change').trigger('blur');
            
            console.log(`‚úÖ –≠–º—É–ª–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥: "${value}"`);
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è textarea –ø–æ–ª–µ–π
    function fillTextareaFields(deliveryType, deliveryInfo = null) {
        console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –¥–ª—è —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:', deliveryType);
        
        const sdekField = $('.wp-block-checkout-fields-for-blocks-textarea.sdek textarea');
        const managerField = $('.wp-block-checkout-fields-for-blocks-textarea.manag textarea');
        
        console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –°–î–≠–ö:', sdekField.length);
        console.log('–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –ú–µ–Ω–µ–¥–∂–µ—Ä:', managerField.length);
        
        if (deliveryType === 'manager') {
            window.currentDeliveryData.dostavka = '';
            window.currentDeliveryData.manager = '–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º';
            
            // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
            simulateUserInput(sdekField, '');
            simulateUserInput(managerField, '–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º');
            
        } else if (deliveryType === 'cdek' && deliveryInfo) {
            let cdekText = '';
            
            if (deliveryInfo.label) {
                cdekText += deliveryInfo.label;
            }
            
            if (deliveryInfo.price) {
                cdekText += ' - ' + deliveryInfo.price;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É–Ω–∫—Ç–µ –°–î–≠–ö –µ—Å–ª–∏ –µ—Å—Ç—å
            const selectedPoint = getSelectedCdekPoint();
            if (selectedPoint) {
                cdekText += '\n–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: ' + selectedPoint.name;
                if (selectedPoint.address) {
                    cdekText += '\n–ê–¥—Ä–µ—Å: ' + selectedPoint.address;
                }
            }
            
            window.currentDeliveryData.dostavka = cdekText;
            window.currentDeliveryData.manager = '';
            
            // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥
            simulateUserInput(managerField, '');
            simulateUserInput(sdekField, cdekText);
        } else {
            console.log('‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ –°–î–≠–ö
    function getSelectedCdekPoint() {
        try {
            const storedPoint = localStorage.getItem('selectedCdekPoint');
            if (storedPoint) {
                return JSON.parse(storedPoint);
            }
            
            if (window.selectedCdekPoint) {
                return window.selectedCdekPoint;
            }
            
            return null;
        } catch (e) {
            console.log('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—É–Ω–∫—Ç–µ –°–î–≠–ö:', e);
            return null;
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    function getCurrentDeliveryType() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –¥–æ—Å—Ç–∞–≤–∫–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
        const discussSelected = $('#discuss_selected').val();
        if (discussSelected === '1') {
            return 'manager';
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É –¥–æ—Å—Ç–∞–≤–∫–∏
        const activeTab = $('.wc-block-checkout__shipping-method-option--selected');
        if (activeTab.length) {
            const titleText = activeTab.find('.wc-block-checkout__shipping-method-option-title').text();
            
            if (titleText.includes('–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º') || titleText.includes('–û–±—Å—É–¥–∏—Ç—å')) {
                return 'manager';
            } else if (titleText.includes('–°–î–≠–ö') || titleText.includes('–î–æ—Å—Ç–∞–≤–∫–∞')) {
                return 'cdek';
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–æ—Å—Ç–∞–≤–∫–∏ —á–µ—Ä–µ–∑ —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏
        const selectedShipping = $('input[name^="radio-control-wc-shipping-method"]:checked');
        if (selectedShipping.length) {
            const shippingValue = selectedShipping.val();
            if (shippingValue && shippingValue.includes('cdek')) {
                return 'cdek';
            }
        }
        
        return null;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
    function getDeliveryInfo() {
        const activeTab = $('.wc-block-checkout__shipping-method-option--selected');
        if (activeTab.length) {
            const label = activeTab.find('.wc-block-checkout__shipping-method-option-title').text().trim();
            const priceElement = activeTab.find('.wc-block-formatted-money-amount');
            const price = priceElement.length ? priceElement.text().trim() : '';
            
            return {
                label: label,
                price: price,
                description: ''
            };
        }
        
        return null;
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    function updateTextareaFields() {
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º textarea –ø–æ–ª—è');
        
        const deliveryType = getCurrentDeliveryType();
        if (!deliveryType) {
            console.log('‚ùì –¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
            return;
        }
        
        console.log('üì¶ –û–ø—Ä–µ–¥–µ–ª–µ–Ω —Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏:', deliveryType);
        
        if (deliveryType === 'manager') {
            fillTextareaFields('manager');
        } else if (deliveryType === 'cdek') {
            const deliveryInfo = getDeliveryInfo();
            fillTextareaFields('cdek', deliveryInfo);
        }
    }
    
    // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ –±–ª–æ–∫–µ –¥–æ—Å—Ç–∞–≤–∫–∏
    function observeShippingBlock() {
        const targetNode = document.querySelector('.wc-block-checkout__shipping-method, .wp-block-woocommerce-checkout-shipping-methods-block');
        
        if (targetNode) {
            const observer = new MutationObserver(function(mutationsList) {
                for (let mutation of mutationsList) {
                    if (mutation.type === 'childList' || mutation.type === 'attributes') {
                        console.log('üëÅÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –±–ª–æ–∫–µ –¥–æ—Å—Ç–∞–≤–∫–∏');
                        debouncedUpdate();
                        break;
                    }
                }
            });
            
            observer.observe(targetNode, {
                childList: true,
                subtree: true,
                attributes: true,
                attributeFilter: ['class', 'aria-checked', 'checked']
            });
            
            console.log('üëÅÔ∏è –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –±–ª–æ–∫–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
    }
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage (–¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å –¥—Ä—É–≥–∏–º–∏ —Å–∫—Ä–∏–ø—Ç–∞–º–∏)
    window.addEventListener('storage', function(e) {
        if (e.key === 'selectedCdekPoint') {
            console.log('üíæ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage, –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è');
            debouncedUpdate();
        }
    });
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏
    $(document).on('change', 'input[name^="radio-control-wc-shipping-method"]', function() {
        console.log('üìª –ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–æ—Å—Ç–∞–≤–∫–∏');
        debouncedUpdate();
    });
    
    // –°–ª—É—à–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ –æ–ø—Ü–∏—è–º –¥–æ—Å—Ç–∞–≤–∫–∏
    $(document).on('click', '.wc-block-checkout__shipping-method-option', function() {
        console.log('üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –æ–ø—Ü–∏–∏ –¥–æ—Å—Ç–∞–≤–∫–∏');
        debouncedUpdate();
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    setTimeout(function() {
        updateTextareaFields();
        observeShippingBlock();
        console.log('‚úÖ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ (—Ç–æ–ª—å–∫–æ React —ç–º—É–ª—è—Ü–∏—è)');
    }, 1000);
    
    // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    window.updateTextareaFields = updateTextareaFields;
    window.fillTextareaFields = fillTextareaFields;
    window.getCurrentDeliveryType = getCurrentDeliveryType;
    window.simulateUserInput = simulateUserInput;
    
    console.log('üéØ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ - —Ç–æ–ª—å–∫–æ —ç–º—É–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞');
});