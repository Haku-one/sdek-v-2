jQuery(document).ready(function($) {
    console.log('üîß –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ textarea –ø–æ–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è
    let updateTimeout;
    let lastAPIUpdateTime = 0;
    let lastAPIUpdateData = { dostavka: '', manager: '' };
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    window.currentDeliveryData = {
        dostavka: '',
        manager: ''
    };
    
    // –î–µ–±–∞—É–Ω—Å–∏–Ω–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —á–∞—Å—Ç—ã—Ö –≤—ã–∑–æ–≤–æ–≤
    function debouncedUpdate() {
        clearTimeout(updateTimeout);
        updateTimeout = setTimeout(updateTextareaFields, 500);
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API (—Å –∑–∞—â–∏—Ç–æ–π –æ—Ç —Ü–∏–∫–ª–æ–≤)
    function updateCheckoutFieldsAPI() {
        const now = Date.now();
        if (now - lastAPIUpdateTime < 2000) { // –ù–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ 2 —Å–µ–∫—É–Ω–¥—ã
            return;
        }
        
        const currentData = { 
            dostavka: window.currentDeliveryData?.dostavka || '',
            manager: window.currentDeliveryData?.manager || ''
        };
        
        if (JSON.stringify(currentData) === JSON.stringify(lastAPIUpdateData)) {
            return; // –î–∞–Ω–Ω—ã–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
        }
        
        if (window.wp && window.wp.data) {
            try {
                const checkoutStore = window.wp.data.dispatch('wc/store/checkout');
                if (checkoutStore && checkoutStore.setExtensionData) {
                    checkoutStore.setExtensionData('checkout-fields-for-blocks', '_meta_dostavka', currentData.dostavka);
                    checkoutStore.setExtensionData('checkout-fields-for-blocks', '_meta_manager', currentData.manager);
                    console.log('üîÑ API –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', currentData);
                    
                    lastAPIUpdateTime = now;
                    lastAPIUpdateData = { ...currentData };
                }
            } catch (e) {
                console.log('–û—à–∏–±–∫–∞ API:', e.message);
            }
        }
    }
    
    // –ü—Ä–æ—Å—Ç–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –±–µ–∑ —Å–∏–º—É–ª—è—Ü–∏–∏ –ø–µ—á–∞—Ç–∏
    function fillTextareaFields(deliveryType, deliveryInfo = null) {
        console.log('üìù –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –¥–ª—è:', deliveryType);
        
        const sdekField = $('.wp-block-checkout-fields-for-blocks-textarea.sdek textarea');
        const managerField = $('.wp-block-checkout-fields-for-blocks-textarea.manag textarea');
        
        if (deliveryType === 'manager') {
            window.currentDeliveryData.dostavka = '';
            window.currentDeliveryData.manager = '–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º';
            
            // –ü—Ä–æ—Å—Ç–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π
            sdekField.val('').trigger('change');
            managerField.val('–î–æ—Å—Ç–∞–≤–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º').trigger('change');
            
            updateCheckoutFieldsAPI();
            
        } else if (deliveryType === 'cdek' && deliveryInfo) {
            let cdekText = deliveryInfo.label || '';
            if (deliveryInfo.price) {
                cdekText += ' - ' + deliveryInfo.price;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—É–Ω–∫—Ç–µ –°–î–≠–ö –µ—Å–ª–∏ –µ—Å—Ç—å
            const selectedPoint = getSelectedCdekPoint();
            if (selectedPoint) {
                cdekText += '\n–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏: ' + selectedPoint.name;
                if (selectedPoint.address) {
                    cdekText += '\n–ê–¥—Ä–µ—Å: ' + selectedPoint.address;
                }
            }
            
            window.currentDeliveryData.dostavka = cdekText;
            window.currentDeliveryData.manager = '';
            
            managerField.val('').trigger('change');
            sdekField.val(cdekText).trigger('change');
            
            updateCheckoutFieldsAPI();
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—É–Ω–∫—Ç–µ –°–î–≠–ö
    function getSelectedCdekPoint() {
        try {
            const storedPoint = localStorage.getItem('selectedCdekPoint');
            if (storedPoint) {
                return JSON.parse(storedPoint);
            }
            if (window.selectedCdekPoint) {
                return window.selectedCdekPoint;
            }
            return null;
        } catch (e) {
            return null;
        }
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
    function getCurrentDeliveryType() {
        const discussSelected = $('#discuss_selected').val();
        if (discussSelected === '1') {
            return 'manager';
        }
        
        const activeTab = $('.wc-block-checkout__shipping-method-option--selected');
        if (activeTab.length) {
            const titleText = activeTab.find('.wc-block-checkout__shipping-method-option-title').text();
            if (titleText.includes('–º–µ–Ω–µ–¥–∂–µ—Ä–æ–º') || titleText.includes('–û–±—Å—É–¥–∏—Ç—å')) {
                return 'manager';
            } else if (titleText.includes('–°–î–≠–ö') || titleText.includes('–î–æ—Å—Ç–∞–≤–∫–∞')) {
                return 'cdek';
            }
        }
        
        const selectedShipping = $('input[name^="radio-control-wc-shipping-method"]:checked');
        if (selectedShipping.length) {
            const shippingValue = selectedShipping.val();
            if (shippingValue && shippingValue.includes('cdek')) {
                return 'cdek';
            }
        }
        
        return null;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å—Ç–∞–≤–∫–µ
    function getDeliveryInfo() {
        const activeTab = $('.wc-block-checkout__shipping-method-option--selected');
        if (activeTab.length) {
            const label = activeTab.find('.wc-block-checkout__shipping-method-option-title').text().trim();
            const priceElement = activeTab.find('.wc-block-formatted-money-amount');
            const price = priceElement.length ? priceElement.text().trim() : '';
            
            return {
                label: label,
                price: price,
                description: ''
            };
        }
        return null;
    }
    
    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    function updateTextareaFields() {
        const deliveryType = getCurrentDeliveryType();
        if (!deliveryType) {
            return;
        }
        
        if (deliveryType === 'manager') {
            fillTextareaFields('manager');
        } else if (deliveryType === 'cdek') {
            const deliveryInfo = getDeliveryInfo();
            fillTextareaFields('cdek', deliveryInfo);
        }
    }
    
    // –ü–µ—Ä–µ—Ö–≤–∞—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
    function interceptFormSubmission() {
        $(document).on('submit', 'form', function(e) {
            console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ');
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            if (window.wp && window.wp.data) {
                try {
                    const checkoutStore = window.wp.data.dispatch('wc/store/checkout');
                    if (checkoutStore && checkoutStore.setExtensionData) {
                        checkoutStore.setExtensionData('checkout-fields-for-blocks', '_meta_dostavka', window.currentDeliveryData.dostavka);
                        checkoutStore.setExtensionData('checkout-fields-for-blocks', '_meta_manager', window.currentDeliveryData.manager);
                        console.log('üîÑ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π');
                    }
                } catch (e) {
                    console.log('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', e);
                }
            }
        });
    }
    
    // –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    function observeShippingBlock() {
        const targetNode = document.querySelector('.wc-block-checkout__shipping-method, .wp-block-woocommerce-checkout-shipping-methods-block');
        
        if (targetNode) {
            const observer = new MutationObserver(function(mutationsList) {
                for (let mutation of mutationsList) {
                    if (mutation.type === 'childList' || mutation.type === 'attributes') {
                        debouncedUpdate();
                        break;
                    }
                }
            });
            
            observer.observe(targetNode, {
                childList: true,
                subtree: true,
                attributes: true,
                attributeFilter: ['class', 'aria-checked', 'checked']
            });
        }
    }
    
    // –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
    window.addEventListener('storage', function(e) {
        if (e.key === 'selectedCdekPoint') {
            debouncedUpdate();
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    setTimeout(function() {
        interceptFormSubmission();
        updateTextareaFields();
        observeShippingBlock();
        console.log('‚úÖ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
    }, 1000);
    
    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    window.updateTextareaFields = updateTextareaFields;
    window.fillTextareaFields = fillTextareaFields;
    window.getCurrentDeliveryType = getCurrentDeliveryType;
    
    console.log('üéØ –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ textarea –ø–æ–ª–µ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)');
});