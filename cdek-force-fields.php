<?php
/**
 * –°–î–≠–ö - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –±–ª–æ—á–Ω–æ–≥–æ checkout
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏ –∏–Ω—ä–µ–∫—Ü–∏–∏
 */

if (!defined('ABSPATH')) {
    exit;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
 */
function cdek_force_fields_init() {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
    add_action('woocommerce_checkout_update_order_meta', 'cdek_save_force_fields', 10);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—è –≤ –∞–¥–º–∏–Ω–∫–µ –∑–∞–∫–∞–∑–∞
    add_action('woocommerce_admin_order_data_after_shipping_address', 'cdek_display_force_fields', 10);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ email
    add_filter('woocommerce_email_order_meta_fields', 'cdek_add_force_email_fields', 10, 3);
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —á–µ—Ä–µ–∑ JavaScript –≤ footer
    add_action('wp_footer', 'cdek_force_add_fields_script');
}
add_action('init', 'cdek_force_fields_init');

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –∏ —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ JavaScript
 */
function cdek_force_add_fields_script() {
    if (!is_checkout()) return;
    ?>
    <script>
    jQuery(function($) {
        console.log('üöÄ –°–î–≠–ö: –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª–µ–π');
        
        // –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ä–º
        var formStrategies = [
            'form.wc-block-components-form',
            'form.woocommerce-checkout', 
            '.wc-block-checkout__form',
            'form[name="checkout"]',
            '.woocommerce-checkout',
            'form',
            'body'
        ];
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ —Ñ–æ—Ä–º—É
        function forceAddFields() {
            console.log('üîß –°–î–≠–ö: –ü–æ–ø—ã—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π...');
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø–æ–ª—è –µ—Å–ª–∏ –µ—Å—Ç—å
            $('input[name*="cdek_point_"]').remove();
            
            var targetForm = null;
            var strategyUsed = '';
            
            // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ–∏—Å–∫–∞ —Ñ–æ—Ä–º—ã
            for (var i = 0; i < formStrategies.length; i++) {
                var strategy = formStrategies[i];
                var forms = $(strategy);
                if (forms.length > 0) {
                    targetForm = forms.first();
                    strategyUsed = strategy;
                    break;
                }
            }
            
            if (!targetForm || targetForm.length === 0) {
                console.log('‚ùå –°–î–≠–ö: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ñ–æ—Ä–º–∞!');
                return false;
            }
            
            // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è
            var fields = [
                '<input type="hidden" name="cdek_point_name" id="cdek_point_name" value="" data-cdek="field">',
                '<input type="hidden" name="cdek_point_address" id="cdek_point_address" value="" data-cdek="field">',
                '<input type="hidden" name="cdek_point_cost" id="cdek_point_cost" value="" data-cdek="field">',
                '<input type="hidden" name="cdek_point_code" id="cdek_point_code" value="" data-cdek="field">'
            ];
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è
            for (var j = 0; j < fields.length; j++) {
                targetForm.append(fields[j]);
            }
            
            console.log('‚úÖ –°–î–≠–ö: –ü–æ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤', strategyUsed, '(—Ç–µ–≥:', targetForm.prop('tagName') + ')');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—è –¥–æ–±–∞–≤–∏–ª–∏—Å—å
            setTimeout(function() {
                var addedFields = $('input[name*="cdek_point_"]').length;
                var fieldsByAttr = $('input[data-cdek="field"]').length;
                console.log('üîß –°–î–≠–ö: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π - –ø–æ name:', addedFields, ', –ø–æ –∞—Ç—Ä–∏–±—É—Ç—É:', fieldsByAttr);
                
                if (addedFields === 0) {
                    console.log('‚ö†Ô∏è –°–î–≠–ö: –ü–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...');
                    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –¥–æ–±–∞–≤–ª—è–µ–º –≤ body
                    $('body').append(fields.join(''));
                    console.log('üîÑ –°–î–≠–ö: –ü–æ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ body –∫–∞–∫ fallback');
                }
            }, 200);
            
            return true;
        }
        
        // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ü–í–ó
        function updateCdekFields() {
            // –ò—â–µ–º –¥–æ—Å—Ç–∞–≤–æ—á–Ω—ã–µ –±–ª–æ–∫–∏ –ø–æ —Ä–∞–∑–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
            var selectors = [
                '.wc-block-components-totals-item',
                '.woocommerce-shipping-totals tr',
                '[class*="shipping"]',
                '[class*="delivery"]'
            ];
            
            var found = false;
            
            for (var s = 0; s < selectors.length && !found; s++) {
                var shippingItems = $(selectors[s]);
                
                shippingItems.each(function() {
                    var $item = $(this);
                    var label = $item.find('.wc-block-components-totals-item__label, .shipping-method-label, .method-label').text().trim();
                    var value = $item.find('.wc-block-components-totals-item__value, .shipping-method-cost, .method-cost').text().trim();
                    var description = $item.find('.wc-block-components-totals-item__description small, .shipping-method-description, .method-description').text().trim();
                    
                    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö, –∏—â–µ–º –≤ –ª—é–±–æ–º —Ç–µ–∫—Å—Ç–µ
                    if (!label) {
                        label = $item.text().trim();
                    }
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –¥–æ—Å—Ç–∞–≤–∫–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º –∞–¥—Ä–µ—Å–æ–º
                    if (label && label !== '–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏' && label !== 'Select pickup point' &&
                        (label.includes('—É–ª.') || label.includes('–ø—Ä-—Ç') || label.includes('–ø—Ä.') || 
                         label.includes('–ø–µ—Ä.') || label.includes('—É–ª–∏—Ü–∞') || label.includes('–ø—Ä–æ—Å–ø–µ–∫—Ç') ||
                         (label.includes(',') && label.length > 15))) {
                        
                        var cost = value.replace(/[^\d]/g, '');
                        if (!cost && label.match(/\d+/)) {
                            cost = label.match(/\d+/)[0];
                        }
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è (—Å fallback –µ—Å–ª–∏ –ø–æ–ª—è –ø—Ä–æ–ø–∞–ª–∏)
                        var nameField = $('input[name="cdek_point_name"]');
                        var addressField = $('input[name="cdek_point_address"]');
                        var costField = $('input[name="cdek_point_cost"]');
                        var codeField = $('input[name="cdek_point_code"]');
                        
                        // –ï—Å–ª–∏ –ø–æ–ª–µ–π –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ
                        if (nameField.length === 0) {
                            console.log('‚ö†Ô∏è –°–î–≠–ö: –ü–æ–ª—è –ø—Ä–æ–ø–∞–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ');
                            if (forceAddFields()) {
                                nameField = $('input[name="cdek_point_name"]');
                                addressField = $('input[name="cdek_point_address"]');
                                costField = $('input[name="cdek_point_cost"]');
                                codeField = $('input[name="cdek_point_code"]');
                            }
                        }
                        
                        // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è
                        if (nameField.length) nameField.val(label);
                        if (addressField.length) addressField.val(description || label);
                        if (costField.length) costField.val(cost);
                        if (codeField.length) codeField.val('AUTO_' + Math.random().toString(36).substr(2, 8));
                        
                        console.log('‚úÖ –°–î–≠–ö: –ü–æ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º', selectors[s]);
                        console.log('üìç –ù–∞–∑–≤–∞–Ω–∏–µ:', label);
                        console.log('üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å:', cost);
                        console.log('üìÆ –ê–¥—Ä–µ—Å:', description || label);
                        console.log('üîß –ü–æ–ª—è –≤ DOM:', nameField.length, addressField.length, costField.length, codeField.length);
                        
                        found = true;
                        return false;
                    }
                });
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è —Å—Ä–∞–∑—É –∏ —á–µ—Ä–µ–∑ —Ç–∞–π–º–µ—Ä—ã –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        forceAddFields();
        setTimeout(forceAddFields, 1000);
        setTimeout(forceAddFields, 3000);
        setTimeout(forceAddFields, 5000);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        setTimeout(updateCdekFields, 2000);
        setInterval(updateCdekFields, 3000);
        
        // –°–æ–±—ã—Ç–∏—è WooCommerce
        $(document.body).on('updated_checkout updated_shipping_method wc_checkout_place_order', function() {
            setTimeout(function() {
                forceAddFields();
                updateCdekFields();
            }, 500);
        });
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è DOM –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ
        var observer = new MutationObserver(function(mutations) {
            var shouldUpdate = false;
            mutations.forEach(function(mutation) {
                if (mutation.type === 'childList' || mutation.type === 'characterData') {
                    var target = $(mutation.target);
                    if (target.closest('.wc-block-components-totals-item, .shipping, .delivery').length > 0 ||
                        target.find('.wc-block-components-totals-item, .shipping, .delivery').length > 0) {
                        shouldUpdate = true;
                    }
                }
            });
            if (shouldUpdate) {
                setTimeout(function() {
                    updateCdekFields();
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—è –≤—Å–µ –µ—â–µ –Ω–∞ –º–µ—Å—Ç–µ
                    if ($('input[name*="cdek_point_"]').length === 0) {
                        forceAddFields();
                    }
                }, 1000);
            }
        });
        
        observer.observe(document.body, {
            childList: true,
            subtree: true,
            characterData: true
        });
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞
        $(document).on('click', '.wc-block-components-checkout-place-order-button, button[type="submit"], input[type="submit"]', function() {
            console.log('üì§ –°–î–≠–ö: –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞, —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–µ–π');
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –µ—â–µ —Ä–∞–∑ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
            if ($('input[name*="cdek_point_"]').length === 0) {
                forceAddFields();
                updateCdekFields();
            }
            
            var fields = $('input[name*="cdek_point_"]');
            console.log('üìä –°–î–≠–ö: –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:', fields.length);
            
            fields.each(function() {
                console.log('üìù –°–î–≠–ö: –ü–æ–ª–µ', this.name, '=', this.value);
            });
            
            // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –¥–ª—è –±–ª–æ—á–Ω–æ–π —Ñ–æ—Ä–º—ã
            setTimeout(function() {
                var finalFields = $('input[name*="cdek_point_"]');
                if (finalFields.length === 0) {
                    console.log('üÜò –°–î–≠–ö: –ö–†–ò–¢–ò–ß–ù–û! –ü–æ–ª—è –ø—Ä–æ–ø–∞–ª–∏ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π, —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ...');
                    $('body').append('<input type="hidden" name="cdek_point_name" value="' + (localStorage.getItem('cdek_last_name') || '') + '">');
                    $('body').append('<input type="hidden" name="cdek_point_address" value="' + (localStorage.getItem('cdek_last_address') || '') + '">');
                    $('body').append('<input type="hidden" name="cdek_point_cost" value="' + (localStorage.getItem('cdek_last_cost') || '') + '">');
                    $('body').append('<input type="hidden" name="cdek_point_code" value="' + (localStorage.getItem('cdek_last_code') || '') + '">');
                }
            }, 100);
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ localStorage –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        setInterval(function() {
            var name = $('input[name="cdek_point_name"]').val();
            var address = $('input[name="cdek_point_address"]').val();
            var cost = $('input[name="cdek_point_cost"]').val();
            var code = $('input[name="cdek_point_code"]').val();
            
            if (name) localStorage.setItem('cdek_last_name', name);
            if (address) localStorage.setItem('cdek_last_address', address);
            if (cost) localStorage.setItem('cdek_last_cost', cost);
            if (code) localStorage.setItem('cdek_last_code', code);
        }, 5000);
        
        // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
        window.cdekDebug = function() {
            console.log('=== –°–î–≠–ö DEBUG ===');
            console.log('–í—Å–µ–≥–æ input –ø–æ–ª–µ–π:', $('input').length);
            console.log('–°–î–≠–ö –ø–æ–ª–µ–π –ø–æ name:', $('input[name*="cdek_point_"]').length);
            console.log('–°–î–≠–ö –ø–æ–ª–µ–π –ø–æ –∞—Ç—Ä–∏–±—É—Ç—É:', $('input[data-cdek="field"]').length);
            console.log('–§–æ—Ä–º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:', $('form').length);
            $('form').each(function(i) {
                console.log('–§–æ—Ä–º–∞', i, ':', this.className, this.id);
            });
            $('input[name*="cdek_point_"]').each(function(){ 
                console.log('–ü–æ–ª–µ', this.name + ':', this.value); 
            });
            console.log('=================');
        };
        
        console.log('üéØ –°–î–≠–ö: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ cdekDebug() –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏');
    });
    </script>
    <?php
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
 */
function cdek_save_force_fields($order_id) {
    error_log('–°–î–≠–ö FORCE: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π –¥–ª—è –∑–∞–∫–∞–∑–∞ #' . $order_id);
    error_log('–°–î–≠–ö FORCE: POST –¥–∞–Ω–Ω—ã–µ: ' . print_r(array_keys($_POST), true));
    
    $fields = array(
        'cdek_point_name' => '–ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–Ω–∫—Ç–∞',
        'cdek_point_address' => '–ê–¥—Ä–µ—Å –ø—É–Ω–∫—Ç–∞', 
        'cdek_point_cost' => '–°—Ç–æ–∏–º–æ—Å—Ç—å',
        'cdek_point_code' => '–ö–æ–¥ –ø—É–Ω–∫—Ç–∞'
    );
    
    $saved_any = false;
    foreach ($fields as $field => $label) {
        if (isset($_POST[$field]) && !empty($_POST[$field])) {
            $value = sanitize_text_field($_POST[$field]);
            update_post_meta($order_id, $field, $value);
            error_log('–°–î–≠–ö FORCE: –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –ø–æ–ª–µ ' . $field . ' = ' . $value);
            $saved_any = true;
        }
    }
    
    if ($saved_any) {
        error_log('–°–î–≠–ö FORCE: –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ø–æ–ª—è –°–î–≠–ö –¥–ª—è –∑–∞–∫–∞–∑–∞ #' . $order_id);
    } else {
        error_log('–°–î–≠–ö FORCE: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª–µ–π –°–î–≠–ö –≤ $_POST –¥–ª—è –∑–∞–∫–∞–∑–∞ #' . $order_id);
    }
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—è –≤ –∞–¥–º–∏–Ω–∫–µ –∑–∞–∫–∞–∑–∞
 */
function cdek_display_force_fields($order) {
    $order_id = $order->get_id();
    
    $point_name = get_post_meta($order_id, 'cdek_point_name', true);
    $point_address = get_post_meta($order_id, 'cdek_point_address', true);
    $point_cost = get_post_meta($order_id, 'cdek_point_cost', true);
    $point_code = get_post_meta($order_id, 'cdek_point_code', true);
    
    if (!$point_name) return;
    
    ?>
    <div style="background: #e8f5e8; border: 1px solid #4caf50; padding: 15px; margin: 15px 0; border-radius: 5px;">
        <h3 style="color: #2e7d32; margin-top: 0;">üì¶ –î–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)</h3>
        
        <p><strong>–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:</strong> <?php echo esc_html($point_name); ?></p>
        
        <?php if ($point_cost): ?>
        <p><strong>–°—Ç–æ–∏–º–æ—Å—Ç—å:</strong> <span style="color: #2e7d32; font-weight: bold;"><?php echo esc_html($point_cost); ?> —Ä—É–±.</span></p>
        <?php endif; ?>
        
        <?php if ($point_address): ?>
        <p><strong>–ê–¥—Ä–µ—Å:</strong> <?php echo esc_html($point_address); ?></p>
        <?php endif; ?>
        
        <?php if ($point_code): ?>
        <p><strong>–ö–æ–¥ –ø—É–Ω–∫—Ç–∞:</strong> <code><?php echo esc_html($point_code); ?></code></p>
        <?php endif; ?>
    </div>
    <?php
}

/**
 * –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –≤ email
 */
function cdek_add_force_email_fields($fields, $sent_to_admin, $order) {
    $order_id = $order->get_id();
    
    $point_name = get_post_meta($order_id, 'cdek_point_name', true);
    $point_address = get_post_meta($order_id, 'cdek_point_address', true);
    $point_cost = get_post_meta($order_id, 'cdek_point_cost', true);
    
    if ($point_name) {
        $value = $point_name;
        if ($point_cost) $value .= ' (' . $point_cost . ' —Ä—É–±.)';
        if ($point_address && $point_address !== $point_name) $value .= "\n" . $point_address;
        
        $fields['cdek_delivery_force'] = array(
            'label' => '–î–æ—Å—Ç–∞–≤–∫–∞ –°–î–≠–ö',
            'value' => $value,
        );
    }
    
    return $fields;
}