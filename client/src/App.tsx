import React, { useState } from 'react';
import styled from 'styled-components';
import CdekDelivery from './components/CdekDelivery/CdekDelivery';
import { CdekPoint, DeliveryCost, CartItem } from './types';
import { apiService } from './services/api';

const AppContainer = styled.div`
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
  
  @media (max-width: 768px) {
    padding: 15px;
  }
`;

const Header = styled.header`
  text-align: center;
  margin-bottom: 30px;
  
  h1 {
    color: #333;
    font-size: 28px;
    margin-bottom: 10px;
    
    @media (max-width: 768px) {
      font-size: 24px;
    }
  }
  
  p {
    color: #666;
    font-size: 16px;
    margin: 0;
    
    @media (max-width: 768px) {
      font-size: 14px;
    }
  }
`;

const DemoControls = styled.div`
  margin-bottom: 30px;
  padding: 20px;
  background: #f8f9fa;
  border-radius: 8px;
  border: 1px solid #dee2e6;
`;

const ControlsTitle = styled.h3`
  margin: 0 0 15px 0;
  color: #333;
  font-size: 16px;
`;

const ButtonGroup = styled.div`
  display: flex;
  gap: 10px;
  flex-wrap: wrap;
  margin-bottom: 15px;
`;

const Button = styled.button<{ variant?: 'primary' | 'secondary' }>`
  padding: 8px 16px;
  border: 1px solid ${props => props.variant === 'primary' ? '#007cba' : '#6c757d'};
  background: ${props => props.variant === 'primary' ? '#007cba' : 'white'};
  color: ${props => props.variant === 'primary' ? 'white' : '#6c757d'};
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  transition: all 0.2s ease;
  
  &:hover {
    background: ${props => props.variant === 'primary' ? '#006ba3' : '#f8f9fa'};
  }
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
`;

const TestResult = styled.div<{ type?: 'success' | 'error' }>`
  margin-top: 10px;
  padding: 10px 12px;
  border-radius: 4px;
  font-size: 14px;
  background: ${props => props.type === 'error' ? '#f8d7da' : '#d4edda'};
  border: 1px solid ${props => props.type === 'error' ? '#f5c6cb' : '#c3e6cb'};
  color: ${props => props.type === 'error' ? '#721c24' : '#155724'};
`;

const SelectedPointDisplay = styled.div`
  margin-top: 20px;
  padding: 15px;
  background: white;
  border: 1px solid #dee2e6;
  border-radius: 6px;
`;

const SelectedPointTitle = styled.h4`
  margin: 0 0 10px 0;
  color: #333;
  font-size: 16px;
`;

const SelectedPointInfo = styled.pre`
  margin: 0;
  font-family: 'Courier New', monospace;
  font-size: 12px;
  color: #666;
  white-space: pre-wrap;
  background: #f8f9fa;
  padding: 10px;
  border-radius: 4px;
`;

// –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
const demoCartItems: CartItem[] = [
  {
    product_id: 1,
    quantity: 2,
    length: 25,
    width: 15,
    height: 10,
    weight: 300,
    price: 1500
  },
  {
    product_id: 2,
    quantity: 1,
    length: 30,
    width: 20,
    height: 5,
    weight: 200,
    price: 800
  }
];

function App() {
  const [selectedPoint, setSelectedPoint] = useState<CdekPoint | null>(null);
  const [deliveryCost, setDeliveryCost] = useState<DeliveryCost | null>(null);
  const [testResult, setTestResult] = useState<string>('');
  const [testError, setTestError] = useState<boolean>(false);
  const [isTestingConnection, setIsTestingConnection] = useState(false);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏
  const handlePointSelect = (point: CdekPoint, cost: DeliveryCost) => {
    setSelectedPoint(point);
    setDeliveryCost(cost);
    console.log('üéØ –í—ã–±—Ä–∞–Ω –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:', point);
    console.log('üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:', cost);
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  const handleError = (error: string) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –°–î–≠–ö:', error);
    setTestResult(error);
    setTestError(true);
  };

  // –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
  const testConnection = async () => {
    setIsTestingConnection(true);
    setTestResult('');
    setTestError(false);

    try {
      const message = await apiService.testCdekConnection();
      setTestResult(message);
      setTestError(false);
    } catch (error) {
      const errorMessage = error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è';
      setTestResult(errorMessage);
      setTestError(true);
    } finally {
      setIsTestingConnection(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
  const clearSelection = () => {
    setSelectedPoint(null);
    setDeliveryCost(null);
  };

  return (
    <AppContainer>
      <Header>
        <h1>üöö –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∏</h1>
        <p>React/Node.js –≤–µ—Ä—Å–∏—è –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è WooCommerce –±–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è</p>
      </Header>

      <DemoControls>
        <ControlsTitle>üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞:</ControlsTitle>
        
        <ButtonGroup>
          <Button 
            variant="primary" 
            onClick={testConnection}
            disabled={isTestingConnection}
          >
            {isTestingConnection ? 'üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : 'üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –°–î–≠–ö'}
          </Button>
          
          <Button onClick={clearSelection}>
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—ã–±–æ—Ä
          </Button>
        </ButtonGroup>

        {testResult && (
          <TestResult type={testError ? 'error' : 'success'}>
            {testError ? '‚ùå' : '‚úÖ'} {testResult}
          </TestResult>
        )}
      </DemoControls>

      <CdekDelivery
        cartItems={demoCartItems}
        onPointSelect={handlePointSelect}
        onError={handleError}
        initialCity=""
      />

      {selectedPoint && deliveryCost && (
        <SelectedPointDisplay>
          <SelectedPointTitle>üìã –í—ã–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:</SelectedPointTitle>
          <SelectedPointInfo>
{`–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏:
–ö–æ–¥: ${selectedPoint.code}
–ù–∞–∑–≤–∞–Ω–∏–µ: ${selectedPoint.name}
–ê–¥—Ä–µ—Å: ${selectedPoint.location?.address_full || selectedPoint.location?.address || '–ù–µ —É–∫–∞–∑–∞–Ω'}
–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${selectedPoint.location?.latitude}, ${selectedPoint.location?.longitude}

–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:
–°—É–º–º–∞: ${deliveryCost.delivery_sum} —Ä—É–±.
–°—Ä–æ–∫–∏: ${deliveryCost.period_min && deliveryCost.period_max ? `${deliveryCost.period_min}-${deliveryCost.period_max} –¥–Ω–µ–π` : '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
–ò—Å—Ç–æ—á–Ω–∏–∫: ${deliveryCost.api_success ? 'API –°–î–≠–ö' : 'Fallback —Ä–∞—Å—á–µ—Ç'}
${deliveryCost.alternative_tariff ? `–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ç–∞—Ä–∏—Ñ: ${deliveryCost.alternative_tariff}` : ''}

–≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤ WooCommerce –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.`}
          </SelectedPointInfo>
        </SelectedPointDisplay>
      )}
    </AppContainer>
  );
}

export default App;
