<?php
/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å WooCommerce Blocks
 * 
 * @package CDEK_Delivery_Blocks_Test
 * @version 1.0.0
 */

// –ó–∞–≥—Ä—É–∂–∞–µ–º WordPress
require_once('wp-config.php');
require_once('wp-load.php');

if (!class_exists('WooCommerce')) {
    die('WooCommerce –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω');
}

echo '<h1>üß™ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å WooCommerce Blocks</h1>';
echo '<style>
    body { font-family: Arial, sans-serif; margin: 20px; }
    .test-section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 5px; }
    .success { background: #d4edda; border-color: #c3e6cb; color: #155724; }
    .error { background: #f8d7da; border-color: #f5c6cb; color: #721c24; }
    .warning { background: #fff3cd; border-color: #ffeaa7; color: #856404; }
    .info { background: #d1ecf1; border-color: #bee5eb; color: #0c5460; }
    pre { background: #f8f9fa; padding: 10px; border-radius: 3px; overflow-x: auto; }
    .button { background: #007cba; color: white; padding: 10px 15px; text-decoration: none; border-radius: 3px; margin: 5px; display: inline-block; }
</style>';

// 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
echo '<div class="test-section">';
echo '<h2>üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏</h2>';

$files_to_check = [
    'woocommerce-blocks-integration.php' => '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å WooCommerce Blocks',
    'cdek-delivery.js' => 'JavaScript —Ñ–∞–π–ª –°–î–≠–ö',
    'cdek-delivery-plugin.php' => '–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø–ª–∞–≥–∏–Ω–∞'
];

foreach ($files_to_check as $file => $description) {
    if (file_exists($file)) {
        echo "<div class='success'>‚úÖ $description: $file</div>";
    } else {
        echo "<div class='error'>‚ùå $description: $file –ù–ï –ù–ê–ô–î–ï–ù</div>";
    }
}
echo '</div>';

// 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∞—Å—Å—ã
echo '<div class="test-section">';
echo '<h2>üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–∞—Å—Å–æ–≤</h2>';

if (class_exists('CDEK_WooCommerce_Blocks_Integration')) {
    echo '<div class="success">‚úÖ –ö–ª–∞—Å—Å CDEK_WooCommerce_Blocks_Integration –Ω–∞–π–¥–µ–Ω</div>';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã –∫–ª–∞—Å—Å–∞
    $reflection = new ReflectionClass('CDEK_WooCommerce_Blocks_Integration');
    $methods = $reflection->getMethods();
    
    echo '<div class="info">–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:<ul>';
    foreach ($methods as $method) {
        if ($method->isPublic() && !$method->isConstructor()) {
            echo '<li>' . $method->getName() . '</li>';
        }
    }
    echo '</ul></div>';
} else {
    echo '<div class="error">‚ùå –ö–ª–∞—Å—Å CDEK_WooCommerce_Blocks_Integration –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
}

if (class_exists('CdekDeliveryPlugin')) {
    echo '<div class="success">‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å CdekDeliveryPlugin –Ω–∞–π–¥–µ–Ω</div>';
} else {
    echo '<div class="error">‚ùå –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å CdekDeliveryPlugin –Ω–µ –Ω–∞–π–¥–µ–Ω</div>';
}
echo '</div>';

// 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö—É–∫–∏ WooCommerce
echo '<div class="test-section">';
echo '<h2>ü™ù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—É–∫–æ–≤ WooCommerce</h2>';

global $wp_filter;

$hooks_to_check = [
    'woocommerce_store_api_checkout_update_order_meta',
    'woocommerce_blocks_checkout_order_processed', 
    'woocommerce_store_api_checkout_order_processed',
    'init'
];

foreach ($hooks_to_check as $hook) {
    if (isset($wp_filter[$hook])) {
        $callbacks = $wp_filter[$hook]->callbacks;
        $found_cdek = false;
        
        foreach ($callbacks as $priority => $callback_group) {
            foreach ($callback_group as $callback) {
                if (is_array($callback['function']) && 
                    is_object($callback['function'][0]) && 
                    get_class($callback['function'][0]) === 'CDEK_WooCommerce_Blocks_Integration') {
                    $found_cdek = true;
                    echo "<div class='success'>‚úÖ –•—É–∫ $hook –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç $priority, –º–µ—Ç–æ–¥ {$callback['function'][1]})</div>";
                    break 2;
                }
            }
        }
        
        if (!$found_cdek) {
            echo "<div class='warning'>‚ö†Ô∏è –•—É–∫ $hook —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ CDEK –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω</div>";
        }
    } else {
        echo "<div class='error'>‚ùå –•—É–∫ $hook –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</div>";
    }
}
echo '</div>';

// 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º WooCommerce Store API
echo '<div class="test-section">';
echo '<h2>üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ WooCommerce Store API</h2>';

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Store API
if (class_exists('\Automattic\WooCommerce\StoreApi\StoreApi')) {
    echo '<div class="success">‚úÖ WooCommerce Store API –¥–æ—Å—Ç—É–ø–µ–Ω</div>';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é
    if (defined('WC_VERSION')) {
        echo '<div class="info">WooCommerce –≤–µ—Ä—Å–∏—è: ' . WC_VERSION . '</div>';
        
        if (version_compare(WC_VERSION, '5.0', '>=')) {
            echo '<div class="success">‚úÖ –í–µ—Ä—Å–∏—è WooCommerce –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Blocks</div>';
        } else {
            echo '<div class="warning">‚ö†Ô∏è –í–µ—Ä—Å–∏—è WooCommerce –º–æ–∂–µ—Ç –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å Blocks</div>';
        }
    }
} else {
    echo '<div class="error">‚ùå WooCommerce Store API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</div>';
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoint checkout
$checkout_url = home_url('/wp-json/wc/store/v1/checkout');
echo "<div class='info'>Endpoint checkout: <a href='$checkout_url' target='_blank'>$checkout_url</a></div>";

echo '</div>';

// 5. –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö blocks
echo '<div class="test-section">';
echo '<h2>üß™ –°–∏–º—É–ª—è—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h2>';

if (class_exists('CDEK_WooCommerce_Blocks_Integration')) {
    try {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
        $order = wc_create_order();
        $order->set_status('pending');
        $order->set_billing_email('test@example.com');
        $order->save();
        
        echo "<div class='success'>‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ #{$order->get_id()}</div>";
        
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ blocks
        $_POST['discuss_delivery_selected'] = '1';
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        $blocks_integration = new CDEK_WooCommerce_Blocks_Integration();
        $blocks_integration->save_blocks_delivery_data($order);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        $delivery_type = $order->get_meta('–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏');
        if ($delivery_type === '–û–±—Å—É–¥–∏—Ç—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º') {
            echo '<div class="success">‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</div>';
            echo '<div class="info">–¢–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏: ' . $delivery_type . '</div>';
        } else {
            echo '<div class="warning">‚ö†Ô∏è –ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–ª—è –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã</div>';
        }
        
        // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        wp_delete_post($order->get_id(), true);
        unset($_POST['discuss_delivery_selected']);
        echo "<div class='info'>–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω</div>";
        
    } catch (Exception $e) {
        echo '<div class="error">‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏: ' . $e->getMessage() . '</div>';
    }
} else {
    echo '<div class="error">‚ùå –ö–ª–∞—Å—Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</div>';
}

echo '</div>';

// 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
echo '<div class="test-section">';
echo '<h2>üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤</h2>';

$log_file = WP_CONTENT_DIR . '/debug.log';
if (file_exists($log_file)) {
    $logs = file_get_contents($log_file);
    $recent_logs = array_slice(explode("\n", $logs), -30);
    $blocks_logs = array_filter($recent_logs, function($log) {
        return strpos($log, '–°–î–≠–ö Blocks') !== false || strpos($log, 'CDEK_WooCommerce_Blocks') !== false;
    });
    
    if (!empty($blocks_logs)) {
        echo '<div class="info">–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ Blocks –≤ –ª–æ–≥–∞—Ö:</div>';
        echo '<pre>' . implode("\n", $blocks_logs) . '</pre>';
    } else {
        echo '<div class="warning">‚ö†Ô∏è –ó–∞–ø–∏—Å–∏ Blocks –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
    }
} else {
    echo '<div class="warning">‚ö†Ô∏è –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ</div>';
}
echo '</div>';

// 7. –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
echo '<div class="test-section info">';
echo '<h2>üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</h2>';
echo '<ol>';
echo '<li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã—à–µ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ</li>';
echo '<li>–û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à–∏ WordPress –∏ WooCommerce</li>';
echo '<li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É checkout –≤–∞—à–µ–≥–æ —Å–∞–π—Ç–∞</li>';
echo '<li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12)</li>';
echo '<li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å "–û–±—Å—É–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"</li>';
echo '<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –∏ –ª–æ–≥–∏ WordPress</li>';
echo '<li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑</li>';
echo '</ol>';

echo '<div class="warning">';
echo '<strong>‚ö†Ô∏è –ï—Å–ª–∏ –≤—Å–µ –µ—â–µ –æ—à–∏–±–∫–∞ 500:</strong><br>';
echo '1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –æ—à–∏–±–æ–∫ PHP<br>';
echo '2. –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç–µ –¥—Ä—É–≥–∏–µ –ø–ª–∞–≥–∏–Ω—ã<br>';
echo '3. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Ç–µ–º—ã —Å WooCommerce Blocks<br>';
echo '4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ checkout (–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π checkout)';
echo '</div>';

echo '</div>';
?>