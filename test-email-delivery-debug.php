<?php
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤ email
 * –ü–æ–º–µ—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å WordPress –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
 * –£–î–ê–õ–ò–¢–ï –§–ê–ô–õ –ü–û–°–õ–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø!
 */

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø
if (!defined('ABSPATH')) {
    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å WordPress
    $wp_config_path = dirname(__FILE__) . '/wp-config.php';
    if (!file_exists($wp_config_path)) {
        die('WordPress –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å WordPress.');
    }
    require_once($wp_config_path);
}

?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –°–î–≠–ö –¥–æ—Å—Ç–∞–≤–∫–∏ - Email –ø—Ä–æ–±–ª–µ–º–∞</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .success { background: #d4edda; color: #155724; padding: 10px; border: 1px solid #c3e6cb; border-radius: 4px; margin: 10px 0; }
        .error { background: #f8d7da; color: #721c24; padding: 10px; border: 1px solid #f5c6cb; border-radius: 4px; margin: 10px 0; }
        .warning { background: #fff3cd; color: #856404; padding: 10px; border: 1px solid #ffeaa7; border-radius: 4px; margin: 10px 0; }
        .info { background: #d1ecf1; color: #0c5460; padding: 10px; border: 1px solid #bee5eb; border-radius: 4px; margin: 10px 0; }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 8px; }
        pre { background: #f8f9fa; padding: 10px; border-radius: 4px; overflow-x: auto; font-size: 12px; }
        .test-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 15px; margin: 20px 0; }
        .test-item { padding: 15px; border: 1px solid #ddd; border-radius: 8px; background: #fafafa; }
        .delete-notice { background: #dc3545; color: white; padding: 15px; border-radius: 8px; margin: 20px 0; text-align: center; font-weight: bold; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å email –¥–æ—Å—Ç–∞–≤–∫–∏ –°–î–≠–ö</h1>
        
        <div class="delete-notice">
            ‚ö†Ô∏è –ù–ï –ó–ê–ë–£–î–¨–¢–ï –£–î–ê–õ–ò–¢–¨ –≠–¢–û–¢ –§–ê–ô–õ –ü–û–°–õ–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø!
        </div>

        <?php
        echo '<div class="info">–í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ' . date('Y-m-d H:i:s') . '</div>';
        
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        echo '<div class="section">';
        echo '<h2>üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤</h2>';
        
        $files_to_check = [
            'cdek-delivery.js' => 'JavaScript —Ñ–∞–π–ª –¥–æ—Å—Ç–∞–≤–∫–∏',
            'cdek-delivery-plugin.php' => '–û—Å–Ω–æ–≤–Ω–æ–π –ø–ª–∞–≥–∏–Ω',
            'cdek-delivery-data-handler.php' => '–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            'theme-functions-cdek.php' => '–§—É–Ω–∫—Ü–∏–∏ —Ç–µ–º—ã',
            'woocommerce-email-templates/admin-new-order.php' => 'Email —à–∞–±–ª–æ–Ω –¥–ª—è –∞–¥–º–∏–Ω–∞',
            'woocommerce-email-templates/customer-completed-order.php' => 'Email —à–∞–±–ª–æ–Ω –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞'
        ];
        
        foreach ($files_to_check as $file => $description) {
            if (file_exists($file)) {
                echo '<div class="success">‚úÖ ' . $description . ' –Ω–∞–π–¥–µ–Ω: ' . $file . '</div>';
            } else {
                echo '<div class="error">‚ùå ' . $description . ' –ù–ï –ù–ê–ô–î–ï–ù: ' . $file . '</div>';
            }
        }
        echo '</div>';
        
        // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π —Ç–µ–º—ã
        echo '<div class="section">';
        echo '<h2>üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π</h2>';
        
        $functions_to_check = [
            'cdek_theme_init' => '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã',
            'cdek_save_discuss_delivery_choice' => '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
            'cdek_show_discuss_delivery_admin' => '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω–∫–µ',
            'cdek_email_discuss_delivery_info' => '–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ email'
        ];
        
        foreach ($functions_to_check as $function => $description) {
            if (function_exists($function)) {
                echo '<div class="success">‚úÖ ' . $description . ': ' . $function . '()</div>';
            } else {
                echo '<div class="error">‚ùå ' . $description . ' –ù–ï –ù–ê–ô–î–ï–ù–ê: ' . $function . '()</div>';
            }
        }
        echo '</div>';
        
        // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—É–∫–æ–≤ WordPress
        echo '<div class="section">';
        echo '<h2>üé£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ö—É–∫–æ–≤ WordPress</h2>';
        
        global $wp_filter;
        
        $hooks_to_check = [
            'woocommerce_checkout_update_order_meta' => '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–∞',
            'woocommerce_email_order_details' => '–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –≤ email',
            'woocommerce_admin_order_data_after_shipping_address' => '–î–∞–Ω–Ω—ã–µ –≤ –∞–¥–º–∏–Ω–∫–µ –ø–æ—Å–ª–µ –∞–¥—Ä–µ—Å–∞'
        ];
        
        foreach ($hooks_to_check as $hook => $description) {
            if (isset($wp_filter[$hook])) {
                echo '<div class="success">‚úÖ ' . $description . ' (' . $hook . '): ' . count($wp_filter[$hook]->callbacks) . ' callback(s)</div>';
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ —Ö—É–∫—É
                foreach ($wp_filter[$hook]->callbacks as $priority => $callbacks) {
                    foreach ($callbacks as $callback) {
                        $function_name = '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è';
                        if (is_array($callback['function'])) {
                            if (is_object($callback['function'][0])) {
                                $function_name = get_class($callback['function'][0]) . '::' . $callback['function'][1];
                            } else {
                                $function_name = $callback['function'][0] . '::' . $callback['function'][1];
                            }
                        } elseif (is_string($callback['function'])) {
                            $function_name = $callback['function'];
                        }
                        echo '<div class="info" style="margin-left: 20px;">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç ' . $priority . ': ' . $function_name . '</div>';
                    }
                }
            } else {
                echo '<div class="warning">‚ö†Ô∏è ' . $description . ' (' . $hook . '): –ù–ï–¢ –ü–†–ò–í–Ø–ó–ê–ù–ù–´–• –§–£–ù–ö–¶–ò–ô</div>';
            }
        }
        echo '</div>';
        
        // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ WooCommerce
        echo '<div class="section">';
        echo '<h2>üõí –ü—Ä–æ–≤–µ—Ä–∫–∞ WooCommerce</h2>';
        
        if (class_exists('WooCommerce')) {
            echo '<div class="success">‚úÖ WooCommerce –∞–∫—Ç–∏–≤–µ–Ω</div>';
            
            global $woocommerce;
            if ($woocommerce) {
                echo '<div class="info">–í–µ—Ä—Å–∏—è WooCommerce: ' . $woocommerce->version . '</div>';
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email
            $mailer = WC()->mailer();
            $emails = $mailer->get_emails();
            echo '<div class="info">–î–æ—Å—Ç—É–ø–Ω—ã–µ email —à–∞–±–ª–æ–Ω—ã: ' . count($emails) . '</div>';
            
            foreach ($emails as $email_id => $email) {
                echo '<div class="info" style="margin-left: 20px;">' . $email_id . ': ' . $email->get_title() . ' (–≤–∫–ª—é—á–µ–Ω: ' . ($email->is_enabled() ? '–¥–∞' : '–Ω–µ—Ç') . ')</div>';
            }
            
        } else {
            echo '<div class="error">‚ùå WooCommerce –ù–ï –ê–ö–¢–ò–í–ï–ù</div>';
        }
        echo '</div>';
        
        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤
        echo '<div class="section">';
        echo '<h2>üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤</h2>';
        
        if (class_exists('WC_Order')) {
            $orders = wc_get_orders([
                'limit' => 5,
                'orderby' => 'date',
                'order' => 'DESC',
                'status' => ['processing', 'completed', 'pending']
            ]);
            
            if (!empty($orders)) {
                echo '<div class="success">‚úÖ –ù–∞–π–¥–µ–Ω–æ ' . count($orders) . ' –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤</div>';
                
                foreach ($orders as $order) {
                    echo '<div class="test-item">';
                    echo '<h4>–ó–∞–∫–∞–∑ #' . $order->get_id() . ' (' . $order->get_status() . ')</h4>';
                    echo '<p>–î–∞—Ç–∞: ' . $order->get_date_created()->format('Y-m-d H:i:s') . '</p>';
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ –°–î–≠–ö
                    $cdek_point_code = get_post_meta($order->get_id(), '_cdek_point_code', true);
                    $cdek_point_data = get_post_meta($order->get_id(), '_cdek_point_data', true);
                    $discuss_delivery = get_post_meta($order->get_id(), '_discuss_delivery_selected', true);
                    
                    if ($cdek_point_code) {
                        echo '<div class="success">‚úÖ –°–î–≠–ö –ø—É–Ω–∫—Ç: ' . $cdek_point_code . '</div>';
                    }
                    
                    if ($discuss_delivery) {
                        echo '<div class="success">‚úÖ –û–±—Å—É–∂–¥–µ–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏: ' . $discuss_delivery . '</div>';
                    }
                    
                    if (!$cdek_point_code && !$discuss_delivery) {
                        echo '<div class="warning">‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Å—Ç–∞–≤–∫–µ –°–î–≠–ö</div>';
                    }
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞
                    $meta_data = $order->get_meta_data();
                    if (!empty($meta_data)) {
                        echo '<details><summary>–í—Å–µ –º–µ—Ç–∞ –¥–∞–Ω–Ω—ã–µ (' . count($meta_data) . ')</summary><pre>';
                        foreach ($meta_data as $meta) {
                            echo $meta->key . ' = ' . print_r($meta->value, true) . "\n";
                        }
                        echo '</pre></details>';
                    }
                    echo '</div>';
                }
            } else {
                echo '<div class="warning">‚ö†Ô∏è –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
            }
        }
        echo '</div>';
        
        // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
        echo '<div class="section">';
        echo '<h2>üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤</h2>';
        
        $log_file = WP_CONTENT_DIR . '/debug.log';
        if (file_exists($log_file) && is_readable($log_file)) {
            echo '<div class="success">‚úÖ –õ–æ–≥ —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω: ' . $log_file . '</div>';
            
            // –ß–∏—Ç–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–∞
            $lines = file($log_file);
            $recent_lines = array_slice($lines, -50);
            
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –°–î–≠–ö
            $cdek_lines = array_filter($recent_lines, function($line) {
                return strpos($line, '–°–î–≠–ö') !== false || strpos($line, 'CDEK') !== false || strpos($line, 'cdek') !== false;
            });
            
            if (!empty($cdek_lines)) {
                echo '<div class="info">–ù–∞–π–¥–µ–Ω–æ ' . count($cdek_lines) . ' –∑–∞–ø–∏—Å–µ–π –æ –°–î–≠–ö –≤ –ª–æ–≥–∞—Ö:</div>';
                echo '<pre>' . implode('', array_slice($cdek_lines, -10)) . '</pre>';
            } else {
                echo '<div class="warning">‚ö†Ô∏è –ó–∞–ø–∏—Å–∏ –æ –°–î–≠–ö –≤ –ª–æ–≥–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</div>';
            }
        } else {
            echo '<div class="error">‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</div>';
            echo '<div class="info">–í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ wp-config.php: define(\'WP_DEBUG_LOG\', true);</div>';
        }
        echo '</div>';
        
        // 7. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        echo '<div class="section">';
        echo '<h2>üß™ –¢–µ—Å—Ç —Å–∏–º—É–ª—è—Ü–∏–∏ –∑–∞–∫–∞–∑–∞</h2>';
        
        if (isset($_GET['test_order']) && $_GET['test_order'] == '1') {
            try {
                // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
                $order = wc_create_order();
                $order->set_billing_first_name('–¢–µ—Å—Ç');
                $order->set_billing_last_name('–¢–µ—Å—Ç–æ–≤');
                $order->set_billing_email('test@example.com');
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä
                $product_id = 1; // ID –ª—é–±–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
                $product = wc_get_product($product_id);
                if ($product) {
                    $order->add_product($product, 1);
                }
                
                $order->calculate_totals();
                $order->save();
                
                $order_id = $order->get_id();
                
                // –°–∏–º—É–ª–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –°–î–≠–ö
                $_POST['discuss_delivery_selected'] = '1';
                
                // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                if (function_exists('cdek_save_discuss_delivery_choice')) {
                    cdek_save_discuss_delivery_choice($order_id);
                    echo '<div class="success">‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ #' . $order_id . ' —Å–æ–∑–¥–∞–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω</div>';
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                    $saved_value = get_post_meta($order_id, '_discuss_delivery_selected', true);
                    if ($saved_value) {
                        echo '<div class="success">‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: ' . $saved_value . '</div>';
                    } else {
                        echo '<div class="error">‚ùå –î–∞–Ω–Ω—ã–µ –ù–ï —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã</div>';
                    }
                    
                    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑
                    wp_delete_post($order_id, true);
                    echo '<div class="info">–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ —É–¥–∞–ª–µ–Ω</div>';
                } else {
                    echo '<div class="error">‚ùå –§—É–Ω–∫—Ü–∏—è cdek_save_discuss_delivery_choice –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</div>';
                }
                
                unset($_POST['discuss_delivery_selected']);
                
            } catch (Exception $e) {
                echo '<div class="error">‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞: ' . $e->getMessage() . '</div>';
            }
        } else {
            echo '<a href="?test_order=1" class="button" style="display: inline-block; padding: 10px 20px; background: #0073aa; color: white; text-decoration: none; border-radius: 4px;">–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞</a>';
        }
        echo '</div>';
        
        // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        echo '<div class="section">';
        echo '<h2>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é</h2>';
        
        echo '<div class="info">';
        echo '<h3>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:</h3>';
        echo '<ul>';
        echo '<li><strong>–§—É–Ω–∫—Ü–∏–∏ —Ç–µ–º—ã –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã:</strong> –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–æ–¥ –∏–∑ theme-functions-cdek.php –¥–æ–±–∞–≤–ª–µ–Ω –≤ functions.php –≤–∞—à–µ–π —Ç–µ–º—ã</li>';
        echo '<li><strong>JavaScript –Ω–µ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–µ:</strong> –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ "–û–±—Å—É–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"</li>';
        echo '<li><strong>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞:</strong> WooCommerce Blocks –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–æ—Ä–º</li>';
        echo '<li><strong>–ö–æ–Ω—Ñ–ª–∏–∫—Ç –ø–ª–∞–≥–∏–Ω–æ–≤:</strong> –î—Ä—É–≥–∏–µ –ø–ª–∞–≥–∏–Ω—ã –º–æ–≥—É—Ç –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã</li>';
        echo '<li><strong>–ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ:</strong> –û—á–∏—Å—Ç–∏—Ç–µ –≤—Å–µ –∫—ç—à–∏ (–ø–ª–∞–≥–∏–Ω—ã, –±—Ä–∞—É–∑–µ—Ä, CDN)</li>';
        echo '</ul>';
        echo '</div>';
        
        echo '<div class="warning">';
        echo '<h3>–®–∞–≥–∏ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</h3>';
        echo '<ol>';
        echo '<li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ</li>';
        echo '<li>–î–æ–±–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ theme-functions-cdek.php –≤ functions.php —Ç–µ–º—ã</li>';
        echo '<li>–í–∫–ª—é—á–∏—Ç–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ WordPress (WP_DEBUG_LOG = true)</li>';
        echo '<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞</li>';
        echo '<li>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ checkout —Å –≤—ã–±–æ—Ä–æ–º "–û–±—Å—É–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É"</li>';
        echo '<li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞</li>';
        echo '</ol>';
        echo '</div>';
        echo '</div>';
        
        // –ö–Ω–æ–ø–∫–∞ —Å–∞–º–æ—É–¥–∞–ª–µ–Ω–∏—è
        if (isset($_GET['delete_me']) && $_GET['delete_me'] == '1') {
            if (unlink(__FILE__)) {
                echo '<div class="success">‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!</div>';
                echo '<script>setTimeout(function(){ window.location.href = "/"; }, 2000);</script>';
            } else {
                echo '<div class="error">‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª. –£–¥–∞–ª–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: ' . __FILE__ . '</div>';
            }
        } else {
            echo '<div class="delete-notice">';
            echo '<a href="?delete_me=1" onclick="return confirm(\'–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª?\')" style="color: white; text-decoration: underline;">üóëÔ∏è –£–î–ê–õ–ò–¢–¨ –≠–¢–û–¢ –§–ê–ô–õ –°–ï–ô–ß–ê–°</a>';
            echo '</div>';
        }
        ?>
        
    </div>
</body>
</html>